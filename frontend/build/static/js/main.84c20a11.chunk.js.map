{"version":3,"sources":["actions/columnActions.js","actions/taskActions.js","actions/userActions.js","actions/index.js","reducers/columnReducer.js","reducers/userReducer.js","reducers/index.js","store/index.js","components/Button.js","components/OpenForm.js","components/Create.js","components/User.js","components/ProgressBar.js","components/TaskForm.js","components/Task.js","components/LimitError.js","components/Column.js","components/Swimlane.js","components/Navbar.js","components/App.js","index.js"],"names":["fetchColumns","dispatch","fetch","then","res","json","columns","type","CONSTANTS","FETCH_COLUMNS","payload","dragStateSave","getState","method","headers","body","JSON","stringify","newState","deleteColumn","id","deletedColumnId","DELETE_COLUMN","addTask","task","newTask","ADD_TASK","editTask","editedTask","EDIT_TASK","fetchUsers","users","FETCH_USERS","deleteUser","_id","DELETE_USER","ADD_COLUMN","DRAG_HAPPENED","DELETE_TASK","EDIT_COLUMN","ADD_USER","DELETE_USER_BY_NAME","initialState","columnReducer","state","action","map","column","tasks","user","name","color","content","priority","columnID","columnId","progress","isLocked","title","limit","index","indexX","indexY","info","indecesY","Set","forEach","add","indecesYArr","Array","from","sort","reverse","sortedInitialState","i","push","newColumn","length","addTaskState","col","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","highestIndexY","filter","sortedSwapState","find","updatedState","userAlreadyAdded","splice","columnStart","columnEnd","userId","newTasks","userID","newStateDelete","filtered","userReducer","deleteState","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","StyledButton","styled","ButtonOld","Button","children","onClick","data-testid","variant","onMouseDown","OpenFormButton","div","StyledIcon","Icon","OpenForm","style","flexShrink","randomColor","require","RadioOption","FormControlLabel","Container","ContainerRow","ContainerRowJustified","StyledTextArea","TextareaAutosize","CloseIcon","CloseSharpIcon","Create","formOpen","content2","content3","radioValue","modalOpened","r","g","b","a","handleClose","setState","handleChange","rgb","openForm","closeForm","handleInputChange","e","target","value","handleAddColumn","props","swimlanesNames","noColumns","luminosity","isNumber","test","isNotEmptyString","trim","previousColumnX","addColumn","swimlane","handleAddSwimlane","previousColumnY","handleAddTask","handleAddUser","wipLimit","newUser","addUser","renderOpenForm","buttonText","renderSwitch","width","rowsMin","autoFocus","placeholder","onChange","marginLeft","height","background","border","borderRadius","boxShadow","display","cursor","Modal","justifyContent","alignItems","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","margin","RadioButtons","FormControl","component","RadioGroup","row","aria-label","event","defaultValue","control","Radio","size","label","fontSize","labelPlacement","this","React","PureComponent","mapDispatchToProps","connect","UserBox","SmallAvatar","Avatar","SmallCloseIcon","isDragDisabled","droppableId","handleDeleteUserByName","deleteUserByName","submitDeleteUserByID","confirmAlert","message","buttons","closeOnEscape","closeOnClickOutside","submitDeleteUserByName","provided","draggableProps","dragHandleProps","ref","innerRef","Tooltip","arrow","backgroundColor","toUpperCase","ProgressSlider","withStyles","root","marginBottom","padding","opacity","thumb","marginTop","active","valueLabel","left","track","rail","thumbColorSecondary","Slider","ProgressBar","disabled","valueLabelDisplay","valueLabelFormat","step","TaskForm","taskContent","priorityRadioValue","taskPriority","taskColor","handleCloseModal","handleChangeColor","handleOpenForm","handleCloseForm","isEditing","handleContentChange","handleEditTask","taskID","taskUsers","console","log","onFocus","select","TaskContainer","LockOpenIcon","LockOpenOutlinedIcon","BlockIcon","BlockOutlinedIcon","LockIcon","LockOutlinedIcon","EditButton","StyledTask","Card","DeleteButton","Users","HighPriorityIcon","PriorityHighIcon","useState","setIsEditing","isLockedBool","setIsLocked","progressValue","setProgress","useSpring","config","duration","handleDeleteTask","deletedTask","submitTaskDelete","onDoubleClick","borderTop","Typography","direction","droppableProps","userLimit","key","newValue","LimitError","ErrorIcon","TypographyStyled","useStyles","makeStyles","theme","popover","pointerEvents","paper","spacing","MouseOverPopover","classes","anchorEl","setAnchorEl","handlePopoverClose","Boolean","aria-owns","undefined","aria-haspopup","onMouseEnter","currentTarget","onMouseLeave","Popover","className","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","InfoIcon","InfoOutlinedIcon","ColumnContainer","StyledInputTitle","input","StyledInputLimit","TitleContainer","ColumnTitle","h3","Limit","Line","isEditingTitle","setIsEditingTitle","isEditingLimit","setIsEditingLimit","isVisible","setIsVisible","handleFocus","preventDefault","handleFinishEditing","validatedColumnLimit","editedColumn","editColumn","onSubmit","onBlur","interactive","ColumnsContainerRow","sortedColumns","colA","colB","String","uniqueUsers","_","ColumnsContainerColumn","FirstRow","App","onDragEnd","result","destination","source","dragStateSaveUsers","getIndecesY","getHighestIndexY","getHighestIndexX","indecesX","getSwimlanesNames","swimlaneNames","ReactDOM","render","document","getElementById"],"mappings":"2RAEO,SAASA,IACd,OAAO,SAACC,GACNC,MAAM,YACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAO,OAAIL,EAAS,CACxBM,KAAMC,EAAUC,cAChBC,QAASJ,QAgDV,SAASK,IACd,OAAO,SAACV,EAAUW,GAChBV,MAAM,WAAY,CAChBW,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,IAAWN,WAE/BH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAe,GAAQ,OAAIjB,EAAS,CACzBM,KAAMC,EAAUC,cAChBC,QAASQ,QAwBV,SAASC,EAAaC,GAC3B,OAAO,SAACnB,GACNC,MAAM,YAAckB,EAAI,CACtBP,OAAQ,WAEPV,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAkB,GAAe,OAAIpB,EAAS,CAChCM,KAAMC,EAAUc,cAChBZ,QAASW,QClGV,SAASE,EAAQC,GACtB,OAAO,SAACvB,GACNC,MAAM,aAAc,CAClBW,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUO,KAEpBrB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAsB,GAAO,OAAIxB,EAAS,CACxBM,KAAMC,EAAUkB,SAChBhB,QAASe,QAKV,SAASE,EAASH,GACvB,OAAO,SAACvB,GACNC,MAAM,UAAYsB,EAAKJ,GAAI,CACzBP,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUO,KAEpBrB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAyB,GAAU,OAAI3B,EAAS,CAC3BM,KAAMC,EAAUqB,UAChBnB,QAASkB,QC7BV,SAASE,IACd,OAAO,SAAC7B,GACNC,MAAM,UACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC4B,GAAD,OACJ9B,EAAS,CACPM,KAAMC,EAAUwB,YAChBtB,QAASqB,QAyBZ,SAASE,EAAWb,GACzB,OAAO,SAACnB,GACNC,MAAM,UAAYkB,EAAI,CACpBP,OAAQ,WAEPV,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA+B,GAAG,OAAIjC,EAAS,CACpBM,KAAMC,EAAU2B,YAChBzB,QAASwB,QCtCV,IAAM1B,EAAY,CACvBkB,SAAU,WACVU,WAAY,aACZC,cAAe,gBACfR,UAAW,YACXS,YAAa,cACbC,YAAa,cACbjB,cAAe,gBACfb,cAAe,gBACfuB,YAAa,cACbQ,SAAU,WACVL,YAAa,cACbM,oBAAqB,uBCdjBC,EAAe,GAgRNC,EA9QO,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCACtD,OAAQA,EAAOtC,MACb,KAAKC,EAAUC,cAAgB,IAAD,aAC5B,IAAMiC,EAAeG,EAAOnC,QAAQoC,KAAI,SAACC,GACvC,IAAIC,EAAQD,EAAOC,MAAMF,KAAI,SAACtB,GAC5B,IAAIO,EAAQP,EAAKO,MAAMe,KAAI,SAACG,GAM1B,MALc,CACZf,IAAKe,EAAKf,IACVgB,KAAMD,EAAKC,KACXC,MAAOF,EAAKE,UAchB,MAVc,CACZ/B,GAAII,EAAKU,IACTkB,QAAS5B,EAAK4B,QACdC,SAAU7B,EAAK6B,SACfC,SAAU9B,EAAK+B,SACfxB,MAAOA,EACPoB,MAAO3B,EAAK2B,MACZK,SAAUhC,EAAKgC,SACfC,SAAUjC,EAAKiC,aAenB,MAXgB,CACdrC,GAAI2B,EAAOb,IACXwB,MAAOX,EAAOW,MACdC,MAAOZ,EAAOY,MACdX,MAAOA,EACPY,MAAOb,EAAOa,MACdC,OAAQd,EAAOc,OACfC,OAAQf,EAAOe,OACfC,KAAMhB,EAAOgB,KACbZ,MAAOJ,EAAOI,UAKZa,EAAW,IAAIC,IACrBvB,EAAawB,SAAQ,SAACnB,GAAD,OAAYiB,EAASG,IAAIpB,EAAOe,WAIrD,IAHA,IAAMM,EAAcC,MAAMC,KAAKN,GAAUO,OAAOC,UAE5CC,EAAqB,GAzCG,WA0CnBC,GACPhC,EAAawB,SAAQ,SAACnB,GAChBA,EAAOe,SAAWY,GAAGD,EAAmBE,KAAK5B,OAF5C2B,EAAI,EAAGA,GAAKN,EAAY,GAAIM,IAAM,EAAlCA,GAMT,MAAM,CAAN,EAAOD,GAhDqB,qCAmD9B,KAAKjE,EAAU4B,WACb,IAAMwC,EAAY,CAChBxD,GAAIyB,EAAOnC,QAAQwB,IACnBwB,MAAOb,EAAOnC,QAAQgD,MACtBC,MAAOd,EAAOnC,QAAQiD,MACtBX,MAAO,GACPY,MAAOf,EAAOnC,QAAQkD,MACtBC,OAAQhB,EAAOnC,QAAQmD,OACvBC,OAAQjB,EAAOnC,QAAQoD,OACvBC,KAAMlB,EAAOnC,QAAQqD,KACrBZ,MAAON,EAAOnC,QAAQyC,OAExB,MAAM,GAAN,mBAAWP,GAAX,CAAkBgC,IAEpB,KAAKpE,EAAUkB,SACb,IAAIF,EAAOqB,EAAOnC,QAAQsC,MAAMH,EAAOnC,QAAQsC,MAAM6B,OAAS,GAE1DpD,EAAU,CACZL,GAAII,EAAKU,IACTkB,QAAS5B,EAAK4B,QACdE,SAAU9B,EAAK+B,SACfxB,MAAO,GACPsB,SAAU7B,EAAK6B,SACfF,MAAO3B,EAAK2B,OAGR2B,EAAelC,EAAME,KAAI,SAACiC,GAC9B,OAAIA,EAAI3D,KAAOK,EAAQ6B,UACrByB,EAAIpB,QACG,2BACFoB,GADL,IAEE/B,MAAM,GAAD,mBAAM+B,EAAI/B,OAAV,CAAiBvB,OAEZsD,KAGhB,OAAOD,EAGT,KAAKtE,EAAU6B,cAAf,MASMQ,EAAOnC,QAPTsE,EAFJ,EAEIA,iBACAC,EAHJ,EAGIA,eACAC,EAJJ,EAIIA,oBACAC,EALJ,EAKIA,kBACA5E,EANJ,EAMIA,KACA6E,EAPJ,EAOIA,YACArD,EARJ,EAQIA,MAEIb,EAAQ,YAAO0B,GAGrB,GAAa,aAATrC,EAAqB,CAAC,IAAD,aACvBW,EAAS4B,KAAI,SAACC,GACZ,OAAIA,EAAOe,SAAWoB,GACpBnC,EAAOe,OAASqB,EACTpC,GACEA,EAAOe,SAAWqB,GAC3BpC,EAAOe,OAASoB,EACTnC,GACKA,KAMhB,IAJA,IAAMsC,EACJnE,EAASoE,QAAO,SAACvC,GAAD,OAA8B,IAAlBA,EAAOc,UAAcgB,OAAS,EAExDU,EAAkB,GAbC,WAcdb,GACPxD,EAASgD,SAAQ,SAACnB,GACZA,EAAOe,SAAWY,GAAGa,EAAgBZ,KAAK5B,OAFzC2B,EAAI,EAAGA,GAAKW,EAAeX,IAAM,EAAjCA,GAKT,MAAM,CAAN,EAAOa,GAnBgB,qCAsBzB,GAAa,SAAThF,GAAmByE,IAAqBC,EAC1C,OAAO/D,EAGT,GAAa,SAATX,EAAiB,CACnB,IAAM0C,EAAOlB,EAAMyD,MAAK,SAACvC,GAAD,OAAUA,EAAKf,MAAQkD,KACzCK,EAAevE,EAAS4B,KAAI,SAACC,GACjC,IAAIC,EAAQD,EAAOC,MAAMF,KAAI,SAACtB,GAC5B,OAAIA,EAAKJ,KAAO6D,EACWzD,EAAKO,MAAMyD,MAClC,SAACE,GAAD,OAAsBA,EAAiBxC,OAASD,EAAKC,QAO3C1B,EAJH,2BACFA,GADL,IAEEO,MAAM,GAAD,mBAAMP,EAAKO,OAAX,CAAkBkB,MAGfzB,KAEhB,OAAO,2BACFuB,GADL,IAEEC,MAAOA,OAGX,OAAOyC,EAIT,GAAIT,IAAqBC,EAAgB,CAAC,IAAD,EACjClC,EAASH,EAAM4C,MAAK,SAACzC,GAAD,OAAYiC,IAAqBjC,EAAO3B,MAC5DI,EAAOuB,EAAOC,MAAM2C,OAAOT,EAAqB,IACtD,EAAAnC,EAAOC,OAAM2C,OAAb,SAAoBR,EAAmB,GAAvC,mBAA6C3D,KAK/C,GAAIwD,IAAqBC,EAAgB,CAAC,IAAD,EAEjCW,EAAchD,EAAM4C,MACxB,SAACzC,GAAD,OAAYiC,IAAqBjC,EAAO3B,MAE1CwE,EAAYjC,QAGZ,IAAMnC,EAAOoE,EAAY5C,MAAM2C,OAAOT,EAAqB,GACrDzD,EAAUD,EAAKsB,KAAI,SAACtB,GAExB,OADAA,EAAK8B,SAAW2B,EACTzD,KAGHqE,EAAYjD,EAAM4C,MAAK,SAACzC,GAAD,OAAYkC,IAAmBlC,EAAO3B,MACnEyE,EAAUlC,SAGV,EAAAkC,EAAU7C,OAAM2C,OAAhB,SAAuBR,EAAmB,GAA1C,mBAAgD1D,KAGlD,OAAOP,EAET,KAAKV,EAAUqB,UAAY,IAAD,EAUpBgB,EAAOnC,QARTwB,EAFsB,EAEtBA,IACAkB,EAHsB,EAGtBA,QACA0C,EAJsB,EAItBA,OACAzC,EALsB,EAKtBA,SACAE,EANsB,EAMtBA,SACAC,EAPsB,EAOtBA,SACAL,EARsB,EAQtBA,MACAM,EATsB,EAStBA,SAEF,OAAOb,EAAME,KAAI,SAACC,GAChB,GAAIA,EAAO3B,KAAOmC,EAAU,CAC1B,IAAMwC,EAAWhD,EAAOC,MAAMF,KAAI,SAACtB,GACjC,OAAIA,EAAKJ,KAAOc,GACdV,EAAK4B,QAAUA,EACf5B,EAAK6B,SAAWA,EAChB7B,EAAKwE,OAASF,EACdtE,EAAKgC,SAAWA,EAChBhC,EAAK2B,MAAQA,EACb3B,EAAKiC,SAAWA,EACTjC,GACKA,KAEhB,OAAO,2BAAKuB,GAAZ,IAAoBC,MAAO+C,IACtB,OAAOhD,KAIlB,KAAKvC,EAAU8B,YAAc,IAAD,EACAO,EAAOnC,QAAzBwB,EADkB,EAClBA,IAAKoB,EADa,EACbA,SACb,OAAOV,EAAME,KAAI,SAACC,GAChB,GAAIA,EAAO3B,KAAOkC,EAAU,CAC1BP,EAAOY,QACP,IAAMoC,EAAWhD,EAAOC,MAAMsC,QAAO,SAAC9D,GAAD,OAAUA,EAAKJ,KAAOc,KAC3D,OAAO,2BAAKa,GAAZ,IAAoBC,MAAO+C,IAE3B,OAAOhD,KAKb,KAAKvC,EAAU+B,YAAc,IAAD,EACUM,EAAOnC,QAAnCwB,EADkB,EAClBA,IAAKwB,EADa,EACbA,MAAOC,EADM,EACNA,MAAOI,EADD,EACCA,KAC3B,OAAOnB,EAAME,KAAI,SAACC,GAChB,OAAIA,EAAO3B,KAAOc,GAChBa,EAAOW,MAAQA,EACfX,EAAOY,MAAQA,EACfZ,EAAOgB,KAAOA,EACPhB,GAEAA,KAKb,KAAKvC,EAAUc,cACb,IAAM2E,EAAc,YAAOrD,GACrBU,EAAWT,EAAOnC,QAClBwF,EAAWD,EAAeX,QAC9B,SAACvC,GAAD,OAAYA,EAAO3B,KAAOkC,KAE5B,OAAO4C,EAASpD,KAAI,SAACiC,EAAKnB,GAExB,OADAmB,EAAInB,MAAQA,EACLmB,KAIX,KAAKvE,EAAU2B,YACb,OAAOS,EAAME,KAAI,SAACC,GAKhB,OAJAA,EAAOC,MAAMF,KAAI,SAACtB,GAEhB,OADAA,EAAKO,MAAQP,EAAKO,MAAMuD,QAAO,SAACrC,GAAD,OAAUA,EAAKf,MAAQW,EAAOnC,WACtDc,KAEFuB,KAIX,QACE,OAAOH,IC5QPF,EAAe,GA0DNyD,EAxDK,WAAmC,IAAlCvD,EAAiC,uDAAzBF,EAAcG,EAAW,uCACpD,OAAQA,EAAOtC,MACb,KAAKC,EAAUwB,YACb,IAAIU,EAAeG,EAAOnC,QAAQoC,KAAI,SAACG,GACrC,MAAO,CACLf,IAAKe,EAAKf,IACVgB,KAAMD,EAAKC,KACXC,MAAOF,EAAKE,UAGhB,OAAOT,EAGT,KAAKlC,EAAUgC,SAEb,OADAI,EAAM+B,KAAK9B,EAAOnC,SACXkC,EAET,KAAKpC,EAAU6B,cAAgB,IAAD,EAOxBQ,EAAOnC,QALTH,EAF0B,EAE1BA,KACA6E,EAH0B,EAG1BA,YACAH,EAJ0B,EAI1BA,eACAD,EAL0B,EAK1BA,iBACA1E,EAN0B,EAM1BA,QAEEY,EAAQ,YAAO0B,GAEnB,GAAa,SAATrC,GAAmByE,IAAqBC,EAC1C,OAAOrC,EAGT,GAAa,SAATrC,EAAiB,CACnB,IAAM0C,EAAOL,EAAM4C,MAAK,SAACvC,GAAD,OAAUA,EAAKf,MAAQkD,KAC/C9E,EAAQ4D,SAAQ,SAACnB,GACfA,EAAOC,MAAMkB,SAAQ,SAAC1C,GAChBA,EAAKJ,KAAO6D,IACWzD,EAAKO,MAAMyD,MAAK,SAAAE,GAAgB,OAAIA,EAAiBxC,OAASD,EAAKC,UAE5FhC,EAAW0B,EAAM0C,QAAO,SAACrC,GAAD,OAAUA,EAAKf,MAAQkD,aAKvD,OAAOlE,EAGT,KAAKV,EAAUiC,oBACb,IAAM2D,EAAcxD,EAAM0C,QAAO,SAACrC,GAAD,OAAUA,EAAKC,OAASL,EAAOnC,WAChE,OAAO0F,EAGT,QACE,OAAOxD,ICpDEyD,cAAgB,CAC3B/F,QAASqC,EACTZ,MAAOoE,ICCLG,EAAa,CAACC,KAULC,EARDC,YACZC,EACAC,YACEC,IAAe,WAAf,EAAmBN,K,qNCRvB,IAAMO,EAAeC,YAAOC,IAAPD,CAAH,KAcHE,EAPA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACxB,OACI,kBAACL,EAAD,CAAcM,cAAY,SAASC,QAAQ,YAC3CC,YAAaH,GAAUD,I,0fCV/B,IAAMK,EAAiBR,IAAOS,IAAV,KAmBdC,EAAaV,YAAOW,IAAPX,CAAH,KAeDY,EATE,SAAC,GAA2B,IAAzBT,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC5B,OACE,kBAACI,EAAD,CAAgBJ,QAASA,GACvB,kBAACM,EAAD,YACA,uBAAGG,MAAO,CAAEC,WAAY,IAAMX,K,2xCCRpC,IAAIY,GAAcC,EAAQ,KAEpBC,GAAcjB,YAAOkB,IAAPlB,CAAH,MAOXmB,GAAYnB,IAAOS,IAAV,MAKTW,GAAepB,IAAOS,IAAV,MAMZY,GAAwBrB,IAAOS,IAAV,MAOrBa,GAAiBtB,YAAOuB,IAAPvB,CAAH,MAiBdwB,GAAYxB,YAAOyB,IAAPzB,CAAH,MAcT0B,G,4MACJ5F,MAAQ,CACN6F,UAAU,EACVrF,QAAS,GACTsF,SAAU,GACVC,SAAU,GACVC,WAAY,SACZC,aAAa,EACb1F,MAAO,CACL2F,EAAG,KACHC,EAAG,MACHC,EAAG,MACHC,EAAG,M,EAIPC,YAAc,WACZ,EAAKC,SAAS,CAAEN,aAAa,K,EAG/BO,aAAe,SAACjG,GACd,EAAKgG,SAAS,CAAEhG,MAAOA,EAAMkG,O,EAG/BC,SAAW,WACT,EAAKH,SAAS,CACZV,UAAU,K,EAIdc,UAAY,WACV,EAAKJ,SAAS,CACZV,UAAU,K,EAIde,kBAAoB,SAACC,GACnB,EAAKN,SAAS,CACZ/F,QAASqG,EAAEC,OAAOC,S,EAItBC,gBAAkB,WAAO,IAAD,EACkB,EAAKhH,MAArCQ,EADc,EACdA,QAASsF,EADK,EACLA,SAAUC,EADL,EACKA,SADL,EAEiC,EAAKkB,MAApDhG,EAFc,EAEdA,OAAQiG,EAFM,EAENA,eAAgBC,EAFV,EAEUA,UAAWzJ,EAFrB,EAEqBA,QACvC6C,EAAQ0E,GAAY,CAAEmC,WAAY,UAEhCC,EAAW,QAAQC,KAAKvB,GACxBwB,GAAoB,QAAQD,KAAKvB,GAEvC,GAAIvF,IACF,EAAK+F,SAAS,CACZ/F,QAAS,GACTsF,SAAU,GACVC,SAAU,GACVF,UAAU,IAGkB,IAA1BrF,EAAQgH,OAAOvF,QAAc,CAC/B,IAAIwF,EAAkB/J,EAAQkF,MAC5B,SAACzC,GAAD,OAAYA,EAAOc,SAAWA,EAAS,GAAuB,IAAlBd,EAAOe,UAG/Cc,EAAY,CAChBlB,MAAON,EACPU,OAAQ,EACRD,OAAQA,EACRE,KAAO,QAAQmG,KAAKxB,GAEhB,6DADAA,EAEJ/E,MAAOsG,GAAYE,EAAmBxB,GAAY,MAClDxF,MAAOkH,EAAkBA,EAAgBlH,MAAQA,GAEnD,EAAK0G,MAAMS,UAAU1F,GAEhBmF,GACHD,EAAe5F,SAAQ,SAACqG,EAAU3G,GAChC,IAAIyG,EAAkB/J,EAAQkF,MAC5B,SAACzC,GAAD,OACEA,EAAOc,SAAWA,EAAS,GAAKd,EAAOe,SAAWF,EAAQ,KAGxDgB,EAAY,CAChBlB,MAAO6G,EACPzG,OAAQF,EAAQ,EAChBC,OAAQA,EACRE,KAAM,QAAQmG,KAAKxB,GACfA,EACA,6DACJ/E,MAAOsG,GAAYE,EAAmBxB,GAAY,MAClDxF,MAAOkH,EAAkBA,EAAgBlH,MAAQA,GAEnD,EAAK0G,MAAMS,UAAU1F,GACrB,EAAKiF,MAAM7J,oB,EAOrBwK,kBAAoB,WAAO,IACjBpH,EAAY,EAAKR,MAAjBQ,QADgB,EAEY,EAAKyG,MAAjChG,EAFgB,EAEhBA,OAAQC,EAFQ,EAERA,OAAQxD,EAFA,EAEAA,QACpB6C,EAAQ0E,GAAY,CAAEmC,WAAY,UAEtC,GAAI5G,IACF,EAAK+F,SAAS,CACZ/F,QAAS,GACTqF,UAAU,IAGkB,IAA1BrF,EAAQgH,OAAOvF,QACjB,IADgC,IAAD,WACtBH,GACP,IAAI+F,EAAkBnK,EAAQkF,MAC5B,SAACzC,GAAD,OAAYA,EAAOc,SAAWa,GAAK3B,EAAOe,SAAWA,EAAS,KAG1Dc,EAAY,CAChBlB,MAAON,EACPU,OAAQA,EACRD,OAAQa,EACRf,MAAO8G,EAAgB9G,MACvBR,MAAOA,GAET,EAAK0G,MAAMS,UAAU1F,GACrB,EAAKiF,MAAM7J,gBAbJ0E,EAAI,EAAGA,EAAIb,EAAQa,IAAM,EAAzBA,I,EAmBfgG,cAAgB,WAAO,IACbpH,EAAa,EAAKuG,MAAlBvG,SADY,EAEmB,EAAKV,MAApCQ,EAFY,EAEZA,QAASwF,EAFG,EAEHA,WAAYzF,EAFT,EAESA,MAE7B,GAAIC,IACF,EAAK+F,SAAS,CACZ/F,QAAS,GACTqF,UAAU,IAGkB,IAA1BrF,EAAQgH,OAAOvF,QAAc,CAC/B,IAAMpD,EAAU,CACd2B,UACAE,WACAD,SAAUuF,EACVzF,MAAOA,GAGT,EAAK0G,MAAMtI,QAAQE,K,EAKzBkJ,c,sBAAgB,0CAAA1B,EAAA,2DACgB,EAAKrG,MAA3BQ,EADM,EACNA,QAASsF,EADH,EACGA,SACbvF,EAAQ0E,GAAY,CAAEmC,WAAY,SAEhCC,EAAW,QAAQC,KAAKxB,IAE1BtF,IAAWsF,EAND,oBAOZ,EAAKS,SAAS,CACZ/F,QAAS,GACTsF,SAAU,GACVD,UAAU,IAGNmC,EAAWX,GAAYvB,EAAW,GAAKA,EAAW,GAC1B,IAA1BtF,EAAQgH,OAAOvF,QAA2C,IAA3B6D,EAAS0B,OAAOvF,OAdvC,iBAeJgG,EAAU,CACd3H,KAAME,EACND,MAAOA,GAGAuB,EAAI,EApBH,YAoBMA,GAAKkG,GApBX,kCAqBF,EAAKf,MAAMiB,QAAQD,GArBjB,QAoBqBnG,IApBrB,uBAuBV,EAAKmF,MAAM/H,aAvBD,4C,EA4BhBiJ,eAAiB,WAAO,IAElBC,EAAa,GACjB,OAFiB,EAAKnB,MAAdtJ,MAGN,IAAK,WACHyK,EAAa,eACb,MAEF,IAAK,aACHA,EAAa,iBACb,MAEF,QACEA,EAAa,aAGjB,OACE,kBAAC,EAAD,CAAU9D,QAAS,EAAKoC,UACtB,kBAAC7B,EAAA,EAAD,YACA,uBAAGE,MAAO,CAAEC,WAAY,IAAMoD,K,EAiDpCC,aAAe,SAAC1K,GACd,OAAQA,GACN,IAAK,WACH,OACE,kBAAC0H,GAAD,KACE,kBAACG,GAAD,CACET,MAAO,CAAEuD,MAAO,SAChBC,QAAS,EACTC,WAAS,EACTC,YAAY,eACZ1B,MAAO,EAAKvG,QACZkI,SAAU,SAAC7B,GAAD,OACR,EAAKN,SAAS,CACZ/F,QAASqG,EAAEC,OAAOC,WAIxB,kBAACvB,GAAD,CACET,MAAO,CAAEuD,MAAO,SAChBC,QAAS,EACTE,YAAY,cACZ1B,MAAO,EAAKjB,SACZ4C,SAAU,SAAC7B,GAAD,OACR,EAAKN,SAAS,CACZT,SAAUe,EAAEC,OAAOC,WAIzB,kBAACzB,GAAD,KACE,kBAACE,GAAD,CACET,MAAO,CAAEuD,MAAO,QAChBC,QAAS,EACTE,YAAY,eACZ1B,MAAO,EAAKhB,SACZ2C,SAAU,SAAC7B,GAAD,OACR,EAAKN,SAAS,CACZR,SAAUc,EAAEC,OAAOC,WAIzB,kBAAC,EAAD,CAAQzC,QAAS,EAAK0C,iBAAtB,gBACA,kBAACtB,GAAD,CAAWpB,QAAS,EAAKqC,cAMjC,IAAK,SACH,OACE,kBAACrB,GAAD,KACE,kBAACE,GAAD,CACET,MAAO,CAAEuD,MAAO,QAASK,WAAY,QACrCJ,QAAS,EACTC,WAAS,EACTC,YAAY,cACZ1B,MAAO,EAAKvG,QACZkI,SAAU,SAAC7B,GAAD,OACR,EAAKN,SAAS,CACZ/F,QAASqG,EAAEC,OAAOC,WAIxB,kBAACvB,GAAD,CACET,MAAO,CAAEuD,MAAO,QAChBC,QAAS,EACTE,YAAY,eACZ1B,MAAO,EAAKjB,SACZ4C,SAAU,SAAC7B,GAAD,OACR,EAAKN,SAAS,CACZT,SAAUe,EAAEC,OAAOC,WAIzB,kBAAC,EAAD,CAAQzC,QAAS,EAAKyD,eAAtB,cACA,kBAACrC,GAAD,CAAWpB,QAAS,EAAKqC,aAK/B,IAAK,aACH,OACE,kBAACtB,GAAD,KACE,kBAACC,GAAD,KACE,kBAACE,GAAD,CACET,MAAO,CAAEuD,MAAO,SAChBC,QAAS,EACTC,WAAS,EACTC,YAAY,eACZ1B,MAAO,EAAKvG,QACZkI,SAAU,SAAC7B,GAAD,OACR,EAAKN,SAAS,CACZ/F,QAASqG,EAAEC,OAAOC,WAIxB,kBAAC,EAAD,CAAQzC,QAAS,EAAKsD,mBAAtB,kBACA,kBAAClC,GAAD,CAAWpB,QAAS,EAAKqC,cAMjC,QACE,OACE,kBAACtB,GAAD,KACE,kBAACE,GAAD,KACE,6BACE,yBACER,MAAO,CACLuD,MAAO,OACPM,OAAQ,OACRC,WAAW,QAAD,OAAU,EAAK7I,MAAMO,MAAM2F,EAA3B,aAAiC,EAAKlG,MAAMO,MAAM4F,EAAlD,aAAwD,EAAKnG,MAAMO,MAAM6F,EAAzE,aAA+E,EAAKpG,MAAMO,MAAM8F,EAAhG,KACVyC,OAAQ,kBACRC,aAAc,MACdC,UAAW,2BACXC,QAAS,eACTC,OAAQ,WAEV5E,QAAS,WACP,EAAKiC,SAAS,CACZN,aAAa,OAInB,kBAACkD,GAAA,EAAD,CACEpE,MAAO,CACLkE,QAAS,OACTG,eAAgB,SAChBC,WAAY,UAEdC,KAAM,EAAKtJ,MAAMiG,YACjBsD,QAAS,EAAKjD,YACdkD,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,MAGX,kBAACC,GAAA,EAAD,CAAMC,GAAI,EAAK9J,MAAMiG,aACnB,6BACE,kBAAC,gBAAD,CACE1F,MAAO,EAAKP,MAAMO,MAClBmI,SAAU,EAAKlC,mBAMzB,kBAACd,GAAD,CACEpB,QAAS,EAAKqC,UACd5B,MAAO,CAAEgF,OAAQ,wBAGrB,kBAACvE,GAAD,CACET,MAAO,CAAEuD,MAAO,SAChBC,QAAS,EACTC,WAAS,EACTC,YAAY,iBACZ1B,MAAO,EAAKvG,QACZkI,SAAU,SAAC7B,GAAD,OACR,EAAKN,SAAS,CACZ/F,QAASqG,EAAEC,OAAOC,WAIxB,kBAACxB,GAAD,KACG,EAAKyE,eACN,kBAAC,EAAD,CAAQ1F,QAAS,EAAKwD,eAAtB,kB,6DAnNI,IAAD,OAMb,OACE,kBAACmC,EAAA,EAAD,CAAaC,UAAU,YACrB,kBAACC,EAAA,EAAD,CACEC,KAAG,EACHC,aAAW,WACX/J,KAAK,WACLoI,SAXe,SAAC4B,GAAD,OACnB,EAAK/D,SAAS,CACZP,WAAYsE,EAAMxD,OAAOC,SAUvBwD,aAAa,UAEb,kBAACpF,GAAD,CACE4B,MAAM,SACNyD,QAAS,kBAACC,EAAA,EAAD,CAAO1F,MAAO,CAAExE,MAAO,SAAWmK,KAAK,UAChDC,MAAO,kBAAC,KAAD,CAAkB5F,MAAO,CAAE6F,SAAU,YAC5CC,eAAe,QAEjB,kBAAC1F,GAAD,CACE4B,MAAM,OACNyD,QAAS,kBAACC,EAAA,EAAD,CAAO1F,MAAO,CAAExE,MAAO,UAAYmK,KAAK,UACjDC,MACE,kBAAC,KAAD,CACE5F,MAAO,CAAExE,MAAO,SAAUqK,SAAU,YAGxCC,eAAe,QAEjB,kBAAC1F,GAAD,CACE4B,MAAM,YACNyD,QAAS,kBAACC,EAAA,EAAD,CAAO1F,MAAO,CAAExE,MAAO,OAASmK,KAAK,UAC9CC,MACE,kBAAC,KAAD,CAAkB5F,MAAO,CAAExE,MAAO,MAAOqK,SAAU,UAErDC,eAAe,Y,+BAsLf,IACAlN,EAASmN,KAAK7D,MAAdtJ,KAER,OAAOmN,KAAK9K,MAAM6F,SAChB,6BAAMiF,KAAKzC,aAAa1K,IAExB,kBAAC,EAAD,CAAU2G,QAASwG,KAAKpE,UACZ,aAAT/I,EACG,eACS,eAATA,EACA,iBACS,WAATA,EACA,aACA,kB,GAtbSoN,IAAMC,eAgcrBC,GAAqB,CACzBtM,UACA+I,UVxgBK,SAAmBvH,GACxB,OAAO,SAAC9C,GACNC,MAAM,gBAAiB,CACrBW,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU8B,KAEpB5C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAyE,GAAS,OAAI3E,EAAS,CAC1BM,KAAMC,EAAU4B,WAChB1B,QAASkE,SU6ff5E,eACA8B,aACAgJ,QRzgBK,SAAiB7H,GACtB,OAAO,SAAChD,GACNC,MAAM,aAAc,CAClBW,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUgC,KAEpB9C,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC0K,GAAD,OACJ5K,EAAS,CACPM,KAAMC,EAAUgC,SAChB9B,QAASmK,UQ+fJiD,gBAZS,SAAClL,GAAD,MAAY,CAClCtC,QAASsC,EAAMtC,WAWuBuN,GAAzBC,CAA6CtF,I,0vBC/gB5D,IAAMuF,GAAUjH,IAAOS,IAAV,MAMPyG,GAAclH,YAAOmH,KAAPnH,CAAH,MAUXoH,GAAiBpH,YAAOwB,KAAPxB,CAAH,KAUdiH,IA8FSD,gBAJS,SAAAlL,GAAK,MAAK,CAChCtC,QAASsC,EAAMtC,WAGFwN,EAvFF,SAAC,GAAgF,IAA9E5L,EAA6E,EAA7EA,IAAKgB,EAAwE,EAAxEA,KAAMU,EAAkE,EAAlEA,MAAOT,EAA2D,EAA3DA,MAAOgL,EAAoD,EAApDA,eAAgBlO,EAAoC,EAApCA,SAAUK,EAA0B,EAA1BA,QAAS8N,EAAiB,EAAjBA,YAepEC,EAAyB,WAC7BpO,ETdG,SAA0BiD,GAC/B,OAAO,SAACjD,GACNC,MAAM,uBAAyBgD,EAAM,CACnCrC,OAAQ,WAETV,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA+C,GAAI,OAAIjD,EAAS,CACrBM,KAAMC,EAAUiC,oBAChB/B,QAASwC,QSMFoL,CAAiBpL,KAGtBqL,EAAuB,WAC3BC,wBAAa,CACX9K,MAAO,SACP+K,QAAS,mCAAqCvL,EAAO,mBACrDwL,QAAS,CACP,CACEnB,MAAO,MACPrG,QAAS,kBAvBfjH,EAASgC,EAAWC,IACI5B,EACRwC,KAAI,SAAAC,GAKlB,OAJAA,EAAOC,MAAMF,KAAI,SAAAtB,GAEf,OADAA,EAAKO,MAAQP,EAAKO,MAAMuD,QAAO,SAAArC,GAAI,OAAIA,EAAKf,MAAQA,KAC7CV,KAEFuB,UAET9C,EAASU,OAgBL,CACE4M,MAAO,KACPrG,QAAS,WACP,OAAO,QAIbyH,eAAe,EACfC,qBAAqB,KAInBC,EAAyB,WAC7BL,wBAAa,CACX9K,MAAO,SACP+K,QAAS,mCAAqCvL,EAAO,SACrDwL,QAAS,CACP,CACEnB,MAAO,MACPrG,QAAS,kBAAMmH,MAEjB,CACEd,MAAO,KACPrG,QAAS,WACP,OAAO,QAIbyH,eAAe,EACfC,qBAAqB,KAIzB,OACE,kBAAC,KAAD,CAAWxJ,YAAalD,EAAKkM,YAAaA,EAAaxK,MAAOA,EAAOrD,KAAK,OAAO4N,eAAgBA,IAC9F,SAACW,GAAD,OACC,yCACMA,EAASC,eACTD,EAASE,gBAFf,CAGEC,IAAKH,EAASI,WAEZ,kBAACnB,GAAD,KACA,kBAACG,GAAD,CAAgBhH,QAAyB,UAAhBkH,EAA0BS,EAAyBN,IAC5E,kBAACY,GAAA,EAAD,CAASzL,MAAOR,EAAMkM,OAAK,GAC7B,kBAACpB,GAAD,CAAarG,MAAO,CAAE0H,gBAAiBlM,IACpCD,EAAK,GAAGoM,wB,iFClHfC,GAAiBC,aAAW,CAChCC,KAAM,CACJvE,MAAO,IACPM,OAAQ,EACRrI,MAAO,UACPuM,aAAc,EACdC,QAAS,EACTC,QAAS,GACT,UAAW,CACTA,QAAS,IAGbC,MAAO,CACLrE,OAAQ,EACRN,MAAO,EACPmE,gBAAiB,OACjBS,UAAW,EACXvE,YAAa,EACb,6BAA8B,CAC5BK,UAAW,YAGfmE,OAAQ,GACRC,WAAY,CACVC,KAAM,oBAERC,MAAO,CACL1E,OAAQ,EACRG,aAAc,GAEhBwE,KAAM,CACJ3E,OAAQ,EACRG,aAAc,GAEhByE,oBAAqB,CACnBvE,QAAS,SAnCU2D,CAqCpBa,MA2BYC,GAzBK,SAAC,GAAiD,IAA/CnD,EAA8C,EAA9CA,aAAc7B,EAAgC,EAAhCA,SAAU3B,EAAsB,EAAtBA,MAAO4G,EAAe,EAAfA,SACpD,OAAOA,EACL,kBAAChB,GAAD,CACEpM,MAAM,YACNwE,MAAO,CAACiI,QAAS,IACjBW,SAAUA,EACVjF,SAAUA,EACV3B,MAAOA,EACP6G,kBAAkB,OAClBC,iBAAkB,SAAC9G,GAAD,OAAWA,EAAQ,KACrC+G,KAAM,GACNvD,aAAcA,IAGhB,kBAACoC,GAAD,CACEjE,SAAUA,EACV3B,MAAOA,EACP6G,kBAAkB,OAClBC,iBAAkB,SAAC9G,GAAD,OAAWA,EAAQ,KACrC+G,KAAM,GACNvD,aAAcA,K,uhCC7CpB,IAAMpF,GAAcjB,YAAOkB,IAAPlB,CAAH,MAOXmB,GAAYnB,IAAOS,IAAV,MAKTY,GAAwBrB,IAAOS,IAAV,MAOrBa,GAAiBtB,YAAOuB,IAAPvB,CAAH,MAiBdwB,GAAYxB,YAAOyB,IAAPzB,CAAH,MAcT6J,G,4MACJ/N,MAAQ,CACN6F,UAAU,EACVrF,QAAS,EAAKyG,MAAM+G,aAAe,GACnCC,mBAAoB,EAAKhH,MAAMiH,cAAgB,SAC/CjI,aAAa,EACb1F,MAAO,EAAK0G,MAAMkH,WAAa,CAC7BjI,EAAG,KACHC,EAAG,MACHC,EAAG,MACHC,EAAG,M,EAIP+H,iBAAmB,WACjB,EAAK7H,SAAS,CAAEN,aAAa,K,EAG/BoI,kBAAoB,SAAC9N,GACnB,EAAKgG,SAAS,CAAEhG,MAAOA,EAAMkG,O,EAG/B6H,eAAiB,WACf,EAAK/H,SAAS,CACZV,UAAU,K,EAId0I,gBAAkB,WACb,EAAKtH,MAAMuH,WAAW,EAAKvH,MAAMN,YACpC,EAAKJ,SAAS,CACZV,UAAU,K,EAId4I,oBAAsB,SAAC5H,GACrB,EAAKN,SAAS,CACZ/F,QAASqG,EAAEC,OAAOC,S,EAItBe,cAAgB,WAAO,IACbpH,EAAa,EAAKuG,MAAlBvG,SADY,EAE2B,EAAKV,MAA5CQ,EAFY,EAEZA,QAASyN,EAFG,EAEHA,mBAAoB1N,EAFjB,EAEiBA,MAGrC,GAAIC,IACF,EAAK+F,SAAS,CACZ/F,QAAS,GACTqF,UAAU,IAGkB,IAA1BrF,EAAQgH,OAAOvF,QAAc,CAC/B,IAAMpD,EAAU,CACd6B,WACAF,UACAC,SAAUwN,EACV1N,SAGF,EAAK0G,MAAMtI,QAAQE,K,EAKzB6P,eAAiB,WAAO,IAAD,EAC6B,EAAKzH,MAA/C0H,EADa,EACbA,OAAQjO,EADK,EACLA,SAAUkO,EADL,EACKA,UAAW/N,EADhB,EACgBA,SADhB,EAE0B,EAAKb,MAA5CQ,EAFa,EAEbA,QAASyN,EAFI,EAEJA,mBAAoB1N,EAFhB,EAEgBA,MAInC,GAFFsO,QAAQC,IAAItO,EAASyN,EAAoB1N,GAET,IAA1BC,EAAQgH,OAAOvF,OAAc,CAC/B,IAAMjD,EAAa,CACjBR,GAAImQ,EACJnO,UACAC,SAAUwN,EACV1N,QACAG,WACAvB,MAAOyP,EACP/N,YAGF,EAAKoG,MAAMlI,SAASC,GAGxB,EAAKiI,MAAMN,a,6DAGG,IAAD,OAMb,OACE,kBAACsD,EAAA,EAAD,CAAaC,UAAU,YACrB,kBAACC,EAAA,EAAD,CACEC,KAAG,EACHC,aAAW,WACX/J,KAAK,WACLoI,SAXuB,SAAC4B,GAAD,OAC3B,EAAK/D,SAAS,CACZ0H,mBAAoB3D,EAAMxD,OAAOC,SAU/BwD,aAAcO,KAAK9K,MAAMiO,oBAEzB,kBAAC,GAAD,CACElH,MAAM,SACNyD,QAAS,kBAACC,EAAA,EAAD,CAAO1F,MAAO,CAAExE,MAAO,SAAWmK,KAAK,UAChDC,MAAO,kBAAC,KAAD,CAAkB5F,MAAO,CAAE6F,SAAU,YAC5CC,eAAe,QAEjB,kBAAC,GAAD,CACE9D,MAAM,OACNyD,QAAS,kBAACC,EAAA,EAAD,CAAO1F,MAAO,CAAExE,MAAO,UAAYmK,KAAK,UACjDC,MACE,kBAAC,KAAD,CACE5F,MAAO,CAAExE,MAAO,SAAUqK,SAAU,YAGxCC,eAAe,QAEjB,kBAAC,GAAD,CACE9D,MAAM,YACNyD,QAAS,kBAACC,EAAA,EAAD,CAAO1F,MAAO,CAAExE,MAAO,OAASmK,KAAK,UAC9CC,MACE,kBAAC,KAAD,CAAkB5F,MAAO,CAAExE,MAAO,MAAOqK,SAAU,UAErDC,eAAe,Y,+BAOf,IAAD,OACC2D,EAAc1D,KAAK7D,MAAnBuH,UAER,OAAO1D,KAAK9K,MAAM6F,UAAY2I,EAC5B,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,6BACE,yBACEzJ,MAAO,CACLuD,MAAO,OACPM,OAAQ,OACRC,WAAW,QAAD,OAAUiC,KAAK9K,MAAMO,MAAM2F,EAA3B,aAAiC4E,KAAK9K,MAAMO,MAAM4F,EAAlD,aAAwD2E,KAAK9K,MAAMO,MAAM6F,EAAzE,aAA+E0E,KAAK9K,MAAMO,MAAM8F,EAAhG,KACVyC,OAAQ,kBACRC,aAAc,MACdC,UAAW,2BACXC,QAAS,eACTC,OAAQ,WAEV5E,QAAS,WACP,EAAKiC,SAAS,CACZN,aAAa,OAInB,kBAACkD,GAAA,EAAD,CACEpE,MAAO,CACLkE,QAAS,OACTG,eAAgB,SAChBC,WAAY,UAEdC,KAAMwB,KAAK9K,MAAMiG,YACjBsD,QAASuB,KAAKsD,iBACd5E,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,MAGX,kBAACC,GAAA,EAAD,CAAMC,GAAIgB,KAAK9K,MAAMiG,aACnB,6BACE,kBAAC,gBAAD,CACE1F,MAAOuK,KAAK9K,MAAMO,MAClBmI,SAAUoC,KAAKuD,wBAMzB,kBAAC,GAAD,CACE/J,QAASwG,KAAKyD,gBACdxJ,MAAO,CAAEgF,OAAQ,wBAGrB,kBAAC,GAAD,CACEhF,MAAO,CAAEuD,MAAO,SAChBC,QAAS,EACTC,WAAS,EACTuG,QAAS,SAAClI,GAAD,OAAOA,EAAEC,OAAOkI,UACzBvG,YAAY,mBACZ1B,MAAO+D,KAAK9K,MAAMQ,QAClBkI,SAAU,SAAC7B,GAAD,OAAO,EAAK4H,oBAAoB5H,MAE5C,kBAAC,GAAD,KACGiE,KAAKd,eACN,kBAAC,EAAD,CACE1F,QAASkK,EAAY1D,KAAK4D,eAAiB5D,KAAKhD,eADlD,iBAQJ,kBAAC,EAAD,CAAUxD,QAASwG,KAAKwD,gBAAxB,kB,GA5MiBvD,IAAMC,eAiNvBC,GAAqB,CACzBtM,UACAI,YAGamM,eAAQ,KAAMD,GAAdC,CAAkC6C,I,04ECxQjD,IAAMkB,GAAgB/K,IAAOS,IAAV,MAMbuK,GAAehL,YAAOiL,KAAPjL,CAAH,KAOZ+K,IAUAG,GAAYlL,YAAOmL,KAAPnL,CAAH,MAUToL,GAAWpL,YAAOqL,KAAPrL,CAAH,KAOR+K,IAUAO,GAAatL,YAAOW,IAAPX,CAAH,KAMZ+K,IASEQ,GAAavL,YAAOwL,KAAPxL,CAAH,MAsBVyL,GAAezL,YAAOW,IAAPX,CAAH,KAMd+K,IASEW,GAAQ1L,IAAOS,IAAV,MASLkL,GAAmB3L,YAAO4L,KAAP5L,CAAH,KAKlB+K,IAiSW/D,kBA5RF,SAAC,GAWP,IAVL1K,EAUI,EAVJA,QACAhC,EASI,EATJA,GACAkC,EAQI,EARJA,SACAD,EAOI,EAPJA,SACAO,EAMI,EANJA,MACA3D,EAKI,EALJA,SACA8B,EAII,EAJJA,MACAyB,EAGI,EAHJA,SACAL,EAEI,EAFJA,MACAM,EACI,EADJA,SACI,EAC8BkP,oBAAS,GADvC,oBACGvB,EADH,KACcwB,EADd,OAEgCD,mBAASlP,GAFzC,oBAEGoP,EAFH,KAEiBC,EAFjB,OAGiCH,mBAASnP,GAH1C,oBAGGuP,EAHH,KAGkBC,EAHlB,KAKEnJ,EAAQoJ,aAAU,CACtBrD,QAAS,EACTtL,KAAM,CAAEsL,QAAS,GACjBsD,OAAQ,CAAEC,SAAU,OAGhB5J,EAAY,WAChBqJ,GAAa,IAGTQ,EAAmB,WbjIpB,IAAoB5R,EakIvBvB,GblIuBuB,EakIH,CAAEJ,KAAIkC,YbjIrB,SAACrD,GACNC,MAAM,iBAAmBsB,EAAKJ,GAAI,CAChCP,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUO,KAEpBrB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAkT,GAAW,OAAIpT,EAAS,CAC5BM,KAAMC,EAAU8B,YAChB5B,QAAS2S,WayHTC,EAAmB,WACvB9E,wBAAa,CACX9K,MAAO,SACP+K,QAAS,8CACTC,QAAS,CACP,CACEnB,MAAO,MACPrG,QAAS,kBAAMkM,MAEjB,CACE7F,MAAO,KACPrG,QAAS,WACP,OAAO,QAIbyH,eAAe,EACfC,qBAAqB,KA0OzB,OAAOwC,EApOH,kBAAC,GAAD,CACEG,OAAQnQ,EACRgQ,WAAW,EACXN,aAAczN,EACd0N,UAAW5N,EACXyN,YAAaxN,EACboO,UAAWzP,EACX0B,SAAUA,EACVH,SAAUA,EACViG,UAAWA,IAOb,kBAAC,KAAShC,IAAV,CAAcI,MAAOkC,GAClBgJ,EACC,kBAAC,KAAD,CAAWzN,YAAahE,EAAIwC,MAAOA,EAAOuK,gBAAgB,IACvD,SAACW,GAAD,OACC,kBAAC+C,GAAD,iBACM/C,EAASC,eACTD,EAASE,gBAFf,CAGEC,IAAKH,EAASI,SACdqE,cAAe,kBAAMX,GAAa,MAElC,kBAACP,GAAD,CACE1K,MAAO,CACLiI,QAAS,GACT4D,UAAW,gBACX1H,OAAQ,OACRuD,gBAAgB,QAAD,OAAUlM,EAAM2F,EAAhB,aAAsB3F,EAAM4F,EAA5B,aAAkC5F,EAAM6F,EAAxC,aAA8C7F,EAAM8F,EAApD,OAGH,WAAb5F,EACC,kBAACoP,GAAD,CAAkB9K,MAAO,CAAE6F,SAAU,YACtB,SAAbnK,EACF,kBAACoP,GAAD,CACE9K,MAAO,CAAExE,MAAO,SAAUqK,SAAU,YAGtC,kBAACiF,GAAD,CACE9K,MAAO,CAAExE,MAAO,MAAOqK,SAAU,UAGrC,kBAACwE,GAAD,MACA,kBAACF,GAAD,CACEtE,SAAS,QACTtG,QAAS,WACP4L,GAAY,GACZ7S,EACE0B,EAAS,CACPP,KACAgC,UACAE,WACAvB,QACAsB,WACAG,WACAL,QACAM,UAAU,QAKlB,kBAAC2O,GAAD,CACE5E,SAAS,QACTnG,YAAa,kBAAMuL,GAAa,KAFlC,QAMA,kBAACL,GAAD,CAAc/E,SAAS,QAAQnG,YAAaiM,GAA5C,UAGA,kBAACG,GAAA,EAAD,KAAarQ,GACb,kBAAC,KAAD,CACEgL,YAAahN,EACbsS,UAAU,aACVnT,KAAK,SAEJ,SAACuO,GAAD,OACC,kBAAC0D,GAAD,iBACM1D,EAAS6E,eADf,CAEE1E,IAAKH,EAASI,WAEbnN,EAAMe,KAAI,SAACG,EAAMW,GAAP,OACT,kBAAC,GAAD,CACE1B,IAAKe,EAAKf,IACVgB,KAAMD,EAAKC,KACX0Q,UAAW3Q,EAAK2Q,UAChBhQ,MAAOA,EACPiQ,IAAK5Q,EAAKf,IACViB,MAAOF,EAAKE,MACZgL,gBAAgB,EAChBC,YAAahN,OAGhB0N,EAASzD,iBAKlB,kBAAC,GAAD,CACEkF,UAAU,EACVpD,aAAc3J,EACdmG,MAAOoJ,EACPzH,SAAU,SAAC7B,EAAGqK,GACZd,EAAYc,GACZ7T,EACE0B,EAAS,CACPP,KACAgC,UACAE,WACAvB,QACAsB,WACAG,SAAUsQ,EACV3Q,kBASd,kBAAC,KAAD,CAAWiC,YAAahE,EAAIwC,MAAOA,IAChC,SAACkL,GAAD,OACC,kBAAC+C,GAAD,iBACM/C,EAASC,eACTD,EAASE,gBAFf,CAGEC,IAAKH,EAASI,SACdqE,cAAe,kBAAMX,GAAa,MAElC,kBAACP,GAAD,CACE1K,MAAO,CACL0H,gBAAgB,QAAD,OAAUlM,EAAM2F,EAAhB,aAAsB3F,EAAM4F,EAA5B,aAAkC5F,EAAM6F,EAAxC,aAA8C7F,EAAM8F,EAApD,OAGH,WAAb5F,EACC,kBAACoP,GAAD,CAAkB9K,MAAO,CAAE6F,SAAU,YACtB,SAAbnK,EACF,kBAACoP,GAAD,CACE9K,MAAO,CAAExE,MAAO,SAAUqK,SAAU,YAGtC,kBAACiF,GAAD,CACE9K,MAAO,CAAExE,MAAO,MAAOqK,SAAU,UAGrC,kBAAC0E,GAAD,CACE1E,SAAS,QACTtG,QAAS,WACP4L,GAAY,GACZ7S,EACE0B,EAAS,CACPP,KACAgC,UACAE,WACAvB,QACAsB,WACAG,WACAL,QACAM,UAAU,QAKlB,kBAAC2O,GAAD,CACE5E,SAAS,QACTnG,YAAa,kBAAMuL,GAAa,KAFlC,QAMA,kBAACL,GAAD,CAAc/E,SAAS,QAAQnG,YAAaiM,GAA5C,UAGA,kBAACG,GAAA,EAAD,KAAarQ,GACb,kBAAC,KAAD,CACEgL,YAAahN,EACbsS,UAAU,aACVnT,KAAK,SAEJ,SAACuO,GAAD,OACC,kBAAC0D,GAAD,iBACM1D,EAAS6E,eADf,CAEE1E,IAAKH,EAASI,WAEbnN,EAAMe,KAAI,SAACG,EAAMW,GAAP,OACT,kBAAC,GAAD,CACE1B,IAAKe,EAAKf,IACVgB,KAAMD,EAAKC,KACX0Q,UAAW3Q,EAAK2Q,UAChBhQ,MAAOA,EACPiQ,IAAK5Q,EAAKf,IACViB,MAAOF,EAAKE,MACZgL,gBAAgB,EAChBC,YAAahN,OAGhB0N,EAASzD,iBAKlB,kBAAC,GAAD,CACE8B,aAAc3J,EACdmG,MAAOoJ,EACPzH,SAAU,SAAC7B,EAAGqK,GACZd,EAAYc,GACZ7T,EACE0B,EAAS,CACPP,KACAgC,UACAE,WACAvB,QACAsB,WACAG,SAAUsQ,EACV3Q,sB,0VCjZxB,IAAM4Q,GAAajN,YAAOkN,KAAPlN,CAAH,MAKVmN,GAAmBnN,YAAO2M,KAAP3M,CAAH,MAShBoN,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,cAAe,QAEjBC,MAAO,CACL5E,QAASyE,EAAMI,QAAQ,QAIZ,SAASC,KACtB,IAAMC,EAAUR,KADyB,EAETvG,IAAMgF,SAAS,MAFN,oBAElCgC,EAFkC,KAExBC,EAFwB,KAQnCC,EAAqB,WACzBD,EAAY,OAGR1I,EAAO4I,QAAQH,GAErB,OACE,6BACE,kBAAClB,GAAA,EAAD,CACEsB,YAAW7I,EAAO,0BAAuB8I,EACzCC,gBAAc,OACdC,aAfoB,SAAChI,GACzB0H,EAAY1H,EAAMiI,gBAedC,aAAcP,GAEd,kBAACd,GAAD,OAEF,kBAACsB,GAAA,EAAD,CACEjU,GAAG,qBACHkU,UAAWZ,EAAQL,QACnBK,QAAS,CACPH,MAAOG,EAAQH,OAEjBrI,KAAMA,EACNyI,SAAUA,EACVY,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,QAEdtJ,QAAS0I,EACTc,qBAAmB,GAEnB,kBAAC1B,GAAD,+B,q0ECxDR,IAAM2B,GAAW9O,YAAO+O,KAAP/O,CAAH,MAQRgP,GAAkBhP,IAAOS,IAAV,MA0BfwO,GAAmBjP,IAAOkP,MAAV,MAchBC,GAAmBnP,IAAOkP,MAAV,MAchBE,GAAiBpP,IAAOS,IAAV,MAOdgL,GAAezL,YAAOW,IAAPX,CAAH,MASZqP,GAAcrP,IAAOsP,GAAV,MASXC,GAAQvP,IAAOsP,GAAV,MAaLE,GAAOxP,IAAOS,IAAV,MA4OKuG,gBAJS,SAAClL,GAAD,MAAY,CAClCtC,QAASsC,EAAMtC,WAGFwN,EAvOA,SAAC,GAYT,IAKoBnE,EAhBzBjG,EAWI,EAXJA,MACAV,EAUI,EAVJA,MACAW,EASI,EATJA,MACAvC,EAQI,EARJA,GACAwC,EAOI,EAPJA,MACAC,EAMI,EANJA,OACAC,EAKI,EALJA,OACA7D,EAII,EAJJA,SACAK,EAGI,EAHJA,QACAyD,EAEI,EAFJA,KACAZ,EACI,EADJA,MACI,EACwCwP,oBAAS,GADjD,oBACG4D,EADH,KACmBC,EADnB,OAEwC7D,oBAAS,GAFjD,oBAEG8D,EAFH,KAEmBC,EAFnB,OAG8B/D,oBAAS,GAHvC,oBAGGgE,EAHH,KAGcC,EAHd,KA+BErN,EAAY,WAChBiN,GAAkB,GAClBE,GAAkB,IAGdG,EAAc,SAACpN,GACnBA,EAAEC,OAAOkI,UAGLxI,EAAe,SAACK,GACpBA,EAAEqN,iBACEP,IAAgB7S,EAAQ+F,EAAEC,OAAOC,OACjC8M,IAAgB9S,EAAQ8F,EAAEC,OAAOC,QAGjCoN,EAAsB,WAC1B,IAAIC,EAAuBrT,GAEtB,QAAQuG,KAAK8M,KAChBA,GAAwB,OAG1BR,GAAkB,GAClBE,GAAkB,GAEU,IAAxBhT,EAAM0G,OAAOvF,SAWf5E,EhBhIC,SAAoB8C,GACzB,OAAO,SAAC9C,GACNC,MAAM,YAAc6C,EAAO3B,GAAI,CAC7BP,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU8B,KAEpB5C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA8W,GAAY,OAAIhX,EAAS,CAC7BM,KAAMC,EAAU+B,YAChB7B,QAASuW,QgBoHFC,CAVM,CACb9V,KACAsC,MAAOA,EACPC,MAAOqT,EACPjT,OACAf,QACAY,QACAC,SACAC,aAoEN,OACE,6BACA,kBAACwS,GAAD,CAAM3O,MAAO,CAAE0H,gBAAiBlM,KAChC,kBAAC2S,GAAD,KACGS,GAAkBE,EAnIdF,EACL,0BAAMY,SAAUJ,GACd,kBAAChB,GAAD,CACExV,KAAK,OACL+K,SAAUlC,EACVO,MAAOA,EACPyB,WAAS,EACTuG,QAASkF,EACTO,OAAQ7N,KAIZ,0BAAM4N,SAAUJ,GACd,kBAACd,GAAD,CACE1V,KAAK,OACL+K,SAAUlC,EACVO,MAAOA,EACPyB,WAAS,EACTuG,QAASkF,EACTO,OAAQ7N,KAmHV,kBAAC2M,GAAD,KACc,IAAXpS,GAA2B,IAAXD,EAAe,KAC9B,kBAACwS,GAAD,CAAOnP,QAAS,kBAAMwP,GAAkB,KACrC/S,IAAU,KACT,kBAAC,KAAD,MACEA,GAAS,EACX,kBAAC,GAAD,MAEAA,GAKLG,EAAS,GAAKD,EAAS,EAAI,KAC1B,kBAACsS,GAAD,CAAajP,QAAS,kBAAMsP,GAAkB,KAC3C9S,GAIO,IAAXI,GAAgBD,EAAS,EACxB,kBAACsL,GAAA,EAAD,CAASzL,MAAOK,EAAMsT,aAAW,EAACjI,OAAK,GACrC,kBAACwG,GAAD,OAEA,KAEF9R,EAAS,GAAKD,EAAS,GACb,IAAXA,GAA2B,IAAXC,EAAgB,KAAkB,IAAXA,EACtC,kBAAC,GAAD,CAAcoD,QA5EG,WACzBsH,wBAAa,CACX9K,MAAO,SACP+K,QAAS,gDACTC,QAAS,CACP,CACEnB,MAAO,MACPrG,QAAS,WA1BW5G,EAAQgF,QAChC,SAACvC,GAAD,OAAYA,EAAOc,SAAWA,KAEdK,SAAQ,SAACnB,GACzB9C,EAASkB,EAAa4B,EAAO3B,KAC7BnB,EAASD,UAuBP,CACEuN,MAAO,KACPrG,QAAS,WACP,OAAO,QAIbyH,eAAe,EACfC,qBAAqB,MA2Df,UAEA,kBAAC,GAAD,CAAc1H,QAzDK,WAC3BsH,wBAAa,CACX9K,MAAO,SACP+K,QAAS,kDACTC,QAAS,CACP,CACEnB,MAAO,MACPrG,QAAS,WArCW5G,EAAQgF,QAChC,SAACvC,GAAD,OAAYA,EAAOe,SAAWA,KAEdI,SAAQ,SAACnB,GACzB9C,EAASkB,EAAa4B,EAAO3B,KAC7BnB,EAASD,UAkCP,CACEuN,MAAO,KACPrG,QAAS,WACP,OAAO,QAIbyH,eAAe,EACfC,qBAAqB,MAwCf,UAGU,IAAX9K,GAA2B,IAAXD,EAAe,KAAO8S,EACrC,kBAAC,KAAD,CACEhP,MAAO,CAAEmE,OAAQ,WACjB5E,QAAS,kBAAM0P,GAAa,MAG9B,kBAAC,KAAD,CACEjP,MAAO,CAAEmE,OAAQ,WACjB5E,QAAS,kBAAM0P,GAAa,OAKxB,IAAX9S,GAA2B,IAAXD,EAAe,KAAO8S,EACrC,kBAAC,KAAD,CAAWvI,YAAahN,IACrB,SAAC0N,GAAD,OACC,yCAASA,EAAS6E,eAAlB,CAAkC1E,IAAKH,EAASI,WAC7ClM,EAAMF,KAAI,SAACtB,EAAMoC,GAAP,OACT,kBAAC,GAAD,CACExC,GAAII,EAAKJ,GACTwC,MAAOA,EACPiQ,IAAKrS,EAAKJ,GACVgC,QAAS5B,EAAK4B,QACdE,SAAU9B,EAAK8B,SACf0C,OAAQxE,EAAKwE,OACb3C,SAAU7B,EAAK6B,SACftB,MAAOP,EAAKO,MACZyB,SAAUhC,EAAKgC,SACfL,MAAO3B,EAAK2B,MACZM,SAAUjC,EAAKiC,cAGlBqL,EAASzD,YACV,kBAAC,GAAD,CAAU/H,SAAUlC,QAIxB,U,uKCjVV,IAAMkW,GAAsBxQ,IAAOS,IAAV,MAkEVuG,gBAJS,SAAClL,GAAD,MAAY,CAClCtC,QAASsC,EAAMtC,WAGFwN,EA3DE,SAAC,GAAyB,IAAvBxN,EAAsB,EAAtBA,QAASwD,EAAa,EAAbA,OAErByT,EADkBjX,EAAQgF,QAAO,SAACvC,GAAD,OAAYA,EAAOe,SAAWA,KAC/BS,MAAK,SAACiT,EAAMC,GAChD,OAAID,EAAK3T,OAAS4T,EAAK5T,OAAe,GACzB,KAGf,OAAkB,IAAXC,EACL,kBAACwT,GAAD,KACGC,EAAczU,KAAI,SAACC,EAAQa,GAAT,OACf,kBAAC,GAAD,CACExC,GAAI2B,EAAO3B,GACXyS,IAAK9Q,EAAO3B,GACZsC,MAAOX,EAAOW,MACdV,MAAOD,EAAOC,MACdY,MAAOb,EAAOa,MACdD,MAAOZ,EAAOY,MACdE,OAAQd,EAAOc,OACfC,OAAQf,EAAOe,OACfC,KAAMhB,EAAOgB,KACbZ,MAAOJ,EAAOI,YAKtB,kBAAC,KAAD,CAAW0Q,IAAK/P,EAAQsB,YAAasS,OAAO5T,GAASF,MAAOE,IACzD,SAACgL,GAAD,OACC,kBAACwI,GAAD,iBACMxI,EAASC,eADf,CAEEE,IAAKH,EAASI,WAEbqI,EAAczU,KAAI,SAACC,EAAQa,GAAT,OACjBb,EAAOe,OAAS,EACd,yCAASgL,EAASE,gBAAlB,CAAmC6E,IAAKjQ,IACtC,kBAAC,GAAD,CACExC,GAAI2B,EAAO3B,GACXyS,IAAK9Q,EAAO3B,GACZsC,MAAOX,EAAOW,MACdV,MAAOD,EAAOC,MACdY,MAAOb,EAAOa,MACdD,MAAOZ,EAAOY,MACdE,OAAQd,EAAOc,OACfC,OAAQf,EAAOe,OACfC,KAAMhB,EAAOgB,KACbZ,MAAOJ,EAAOI,SAGhB,e,4KCpDhB,IAAM8E,GAAYnB,IAAOS,IAAV,MAiCAuG,kBAzBA,SAAC,GAAe,IAAb/L,EAAY,EAAZA,MACV4V,EAAcC,UAAS7V,EAAO,QAEpC,OACE,kBAAC,KAAD,CAAWqM,YAAY,QAAQsF,UAAU,aAAanT,KAAK,SACxD,SAACuO,GAAD,OACC,kBAAC,GAAD,iBAAeA,EAAS6E,eAAxB,CAAwC1E,IAAKH,EAASI,WACnDyI,EAAY7U,KAAI,SAACG,EAAMW,GAAP,OACf,kBAAC,GAAD,CACE1B,IAAKe,EAAKf,IACVgB,KAAMD,EAAKC,KACXU,MAAOA,EACPiQ,IAAK5Q,EAAKf,IACViB,MAAOF,EAAKE,MACZiL,YAAY,aAGfU,EAASzD,YACZ,kBAAC,GAAD,CAAQ9K,KAAK,kB,yOCzBrB,IAAIsH,GAAcC,EAAQ,KAEpB+P,GAAyB/Q,IAAOS,IAAV,MAKtBuQ,GAAWhR,IAAOS,IAAV,MAMRwQ,G,4MAMJC,UAAY,SAACC,GAAY,IACfC,EAA2CD,EAA3CC,YAAaC,EAA8BF,EAA9BE,OAAQ/S,EAAsB6S,EAAtB7S,YAAa7E,EAAS0X,EAAT1X,KAErC2X,IAIL,EAAKrO,MAAMtF,KACT4T,EAAO/J,YACP8J,EAAY9J,YACZ+J,EAAOvU,MACPsU,EAAYtU,MACZwB,EACA7E,GAGF,EAAKsJ,MAAMlJ,gBACX,EAAKkJ,MAAMuO,uB,EAGbC,YAAc,WAAO,IACX/X,EAAY,EAAKuJ,MAAjBvJ,QACJ0D,EAAW,IAAIC,IAGnB,OAFA3D,EAAQ4D,SAAQ,SAACnB,GAAD,OAAYiB,EAASG,IAAIpB,EAAOe,WAEzCO,MAAMC,KAAKN,I,EAGpBsU,iBAAmB,WAAO,IAChBhY,EAAY,EAAKuJ,MAAjBvJ,QACF0D,EAAW,IAAIC,IAIrB,OAHA3D,EAAQ4D,SAAQ,SAACnB,GAAD,OAAYiB,EAASG,IAAIpB,EAAOe,WAC5BO,MAAMC,KAAKN,GAAUO,OAAOC,UAE7B,GAAK,G,EAG1B+T,iBAAmB,WAAO,IAChBjY,EAAY,EAAKuJ,MAAjBvJ,QACFkY,EAAW,IAAIvU,IAIrB,OAHA3D,EAAQ4D,SAAQ,SAACnB,GAAD,OAAYyV,EAASrU,IAAIpB,EAAOc,WAC5BQ,MAAMC,KAAKkU,GAAUjU,OAAOC,UAE7B,GAAK,G,EAG1BiU,kBAAoB,WAAO,IACjBnY,EAAY,EAAKuJ,MAAjBvJ,QACJoY,EAAgB,GAOpB,OANApY,EAAQ4D,SAAQ,SAACnB,GAAD,OACdA,EAAOe,OAAS,GAAuB,IAAlBf,EAAOc,OACxB6U,EAAc/T,KAAK5B,EAAOW,OAC1B,QAGCgV,EAAcnU,MAAK,SAAC0E,EAAGD,GAAJ,OAAWC,EAAEnF,OAASkF,EAAElF,OAAS,EAAI,M,kEA3D/D4J,KAAK7D,MAAM7J,eACX0N,KAAK7D,MAAM/H,e,+BA6DH,IAAD,SACoB4L,KAAK7D,MAAxBvJ,EADD,EACCA,QAASyB,EADV,EACUA,MACjB,OACE,kBAAC,KAAD,CAAiBiW,UAAWtK,KAAKsK,WAC/B,kBAAC,GAAD,CAAQjW,MAAOA,IACf,kBAAC+V,GAAD,CAAUjE,IAAK,GACb,kBAAC,GAAD,CAAU/P,OAAQ,EAAG+P,IAAK,EAAG1Q,MAAO0E,OACnCvH,EAAQuE,OAAS,EAChB,kBAAC,GAAD,CACEtE,KAAM,WACNsD,OAAQ6J,KAAK6K,mBACbzO,eAAgB4D,KAAK+K,sBAGvB,kBAAC,GAAD,CAAQlY,KAAM,WAAYsD,OAAQ,EAAGkG,WAAS,KAGlD,kBAAC,KAAD,CAAWqE,YAAY,YAAY7N,KAAK,aACrC,SAACuO,GAAD,OACC,kBAAC+I,GAAD,iBACM/I,EAAS6E,eADf,CAEE1E,IAAKH,EAASI,WAEd,6BACG,EAAKmJ,cAAcvV,KAAI,SAACgB,EAAQF,GAAT,OACZ,IAAVA,EAAc,KACZ,kBAAC,GAAD,CACEE,OAAQA,EACR+P,IAAK/P,EACLX,MAAO0E,UAIZiH,EAASzD,YACT/K,EAAQuE,OAAS,EAChB,kBAAC,GAAD,CACEtE,KAAM,aACNuD,OAAQ,EAAKwU,mBACbzU,OAAQ,EAAK0U,qBAEb,e,GAxGF3K,iBAuHZC,GAAqB,CAAE7N,eAAcuE,KnB/GpC,SACHS,EACAC,EACAC,EACAC,EACAC,EACA7E,GAEA,OAAO,SAACN,EAAUW,GAAc,IAAD,EACFA,IAAnBmB,EADqB,EACrBA,MAAOzB,EADc,EACdA,QACfL,EAAS,CACPM,KAAMC,EAAU6B,cAChB3B,QAAS,CACLsE,mBACAC,iBACAC,sBACAC,oBACAC,cACA7E,OACAwB,QACAzB,emB2FqCK,gBAAemB,aAAYG,aAAYmW,mBjBjFjF,WACL,OAAO,SAACnY,EAAUW,GAChBV,MAAM,SAAU,CACdW,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,IAAWmB,SAE/B5B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAe,GAAQ,OAAIjB,EAAS,CACzBM,KAAMC,EAAUwB,YAChBtB,QAASQ,UiBuEF4M,gBAPS,SAAClL,GAAD,MAAY,CAClCtC,QAASsC,EAAMtC,QACfyB,MAAOa,EAAMb,SAKyB8L,GAAzBC,CAA6CiK,I,OCxI5DY,IAASC,OACT,kBAAC,IAAD,CAAUpS,MAAOA,GACb,kBAAC,GAAD,OAEJqS,SAASC,eAAe,W","file":"static/js/main.84c20a11.chunk.js","sourcesContent":["import {CONSTANTS} from '../actions'\n\nexport function fetchColumns() {\n  return (dispatch) => {\n    fetch('/columns')\n      .then(res => res.json())\n      .then(columns => dispatch({\n        type: CONSTANTS.FETCH_COLUMNS,\n        payload: columns\n      }));\n  }\n}\n\nexport function addColumn(column) {\n  return (dispatch) => {\n    fetch('/columns/add/', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(column)\n    })\n      .then(res => res.json())\n      .then(newColumn => dispatch({\n        type: CONSTANTS.ADD_COLUMN,\n        payload: newColumn\n      }));\n  }\n}\n\nexport function sort(\n    droppableIdStart,\n    droppableIdEnd,\n    droppableIndexStart,\n    droppableIndexEnd,\n    draggableId,\n    type\n) {\n    return (dispatch, getState) => {\n      const { users, columns } = getState();\n      dispatch({\n        type: CONSTANTS.DRAG_HAPPENED,\n        payload: {\n            droppableIdStart,\n            droppableIdEnd,\n            droppableIndexStart,\n            droppableIndexEnd,\n            draggableId,\n            type,\n            users,\n            columns\n        }\n      })\n    }\n}\n\nexport function dragStateSave() {\n  return (dispatch, getState) => {\n    fetch('/columns', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(getState().columns)\n    })\n      .then(res => res.json())\n      .then(newState => dispatch({\n        type: CONSTANTS.FETCH_COLUMNS,\n        payload: newState\n      }));\n  }\n}\n\nexport function editColumn(column) {\n  return (dispatch) => {\n    fetch('/columns/' + column.id, {\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(column)\n    })\n      .then(res => res.json())\n      .then(editedColumn => dispatch({\n        type: CONSTANTS.EDIT_COLUMN,\n        payload: editedColumn\n      }));\n  }\n}\n\n\n\nexport function deleteColumn(id) {\n  return (dispatch) => {\n    fetch('/columns/' + id, {\n      method: 'DELETE'\n    })\n      .then(res => res.json())\n      .then(deletedColumnId => dispatch({\n        type: CONSTANTS.DELETE_COLUMN,\n        payload: deletedColumnId\n      }));\n  }\n}","import { CONSTANTS } from \"../actions\";\n\nexport function addTask(task) {\n  return (dispatch) => {\n    fetch('/tasks/add', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(res => res.json())\n      .then(newTask => dispatch({\n        type: CONSTANTS.ADD_TASK,\n        payload: newTask\n      }));\n  }\n}\n\nexport function editTask(task) {\n  return (dispatch) => {\n    fetch('/tasks/' + task.id, {\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(res => res.json())\n      .then(editedTask => dispatch({\n        type: CONSTANTS.EDIT_TASK,\n        payload: editedTask\n      }));\n  }\n}\n\nexport function deleteTask(task) {\n  return (dispatch) => {\n    fetch('/tasks/delete/' + task.id, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n      .then(res => res.json())\n      .then(deletedTask => dispatch({\n        type: CONSTANTS.DELETE_TASK,\n        payload: deletedTask\n      }));\n  }\n}","import { CONSTANTS } from \"../actions\";\n\nexport function fetchUsers() {\n  return (dispatch) => {\n    fetch(\"/users\")\n      .then((res) => res.json())\n      .then((users) =>\n        dispatch({\n          type: CONSTANTS.FETCH_USERS,\n          payload: users,\n        })\n      );\n  };\n}\n\nexport function addUser(user) {\n  return (dispatch) => {\n    fetch(\"/users/add\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    })\n      .then((res) => res.json())\n      .then((newUser) =>\n        dispatch({\n          type: CONSTANTS.ADD_USER,\n          payload: newUser,\n        })\n      );\n  };\n}\n\nexport function deleteUser(id) {\n  return (dispatch) => {\n    fetch('/users/' + id, {\n      method: 'DELETE'\n    })\n      .then(res => res.json())\n      .then(_id => dispatch({\n        type: CONSTANTS.DELETE_USER,\n        payload: _id\n      }));\n  }\n}\n\nexport function deleteUserByName(name) {\n  return (dispatch) => {\n    fetch('/users/deleteByName/' + name, {\n      method: 'DELETE'\n    })\n    .then(res => res.json())\n    .then(name => dispatch({\n      type: CONSTANTS.DELETE_USER_BY_NAME,\n      payload: name\n    }))\n  }\n}\n\nexport function dragStateSaveUsers() {\n  return (dispatch, getState) => {\n    fetch('/users', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(getState().users)\n    })\n      .then(res => res.json())\n      .then(newState => dispatch({\n        type: CONSTANTS.FETCH_USERS,\n        payload: newState\n      }));\n  }\n}","export * from \"./columnActions\";\nexport * from \"./taskActions\";\nexport * from \"./userActions\";\n\nexport const CONSTANTS = {\n  ADD_TASK: \"ADD_TASK\",\n  ADD_COLUMN: \"ADD_COLUMN\",\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\n  EDIT_TASK: \"EDIT_TASK\",\n  DELETE_TASK: \"DELETE_TASK\",\n  EDIT_COLUMN: \"EDIT_COLUMN\",\n  DELETE_COLUMN: \"DELETE_COLUMN\",\n  FETCH_COLUMNS: \"FETCH_COLUMNS\",\n  FETCH_USERS: \"FETCH_USERS\",\n  ADD_USER: \"ADD_USER\",\n  DELETE_USER: \"DELETE_USER\",\n  DELETE_USER_BY_NAME: \"DELETE_USER_BY_NAME\",\n};\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = [];\n\nconst columnReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.FETCH_COLUMNS: {\n      const initialState = action.payload.map((column) => {\n        let tasks = column.tasks.map((task) => {\n          let users = task.users.map((user) => {\n            let newUser = {\n              _id: user._id,\n              name: user.name,\n              color: user.color,\n            };\n            return newUser;\n          });\n          let newTask = {\n            id: task._id,\n            content: task.content,\n            priority: task.priority,\n            columnID: task.columnId,\n            users: users,\n            color: task.color,\n            progress: task.progress,\n            isLocked: task.isLocked,\n          };\n          return newTask;\n        });\n        let newColumn = {\n          id: column._id,\n          title: column.title,\n          limit: column.limit,\n          tasks: tasks,\n          index: column.index,\n          indexX: column.indexX,\n          indexY: column.indexY,\n          info: column.info,\n          color: column.color,\n        };\n        return newColumn;\n      });\n\n      const indecesY = new Set();\n      initialState.forEach((column) => indecesY.add(column.indexY));\n      const indecesYArr = Array.from(indecesY).sort().reverse(); // first element must be highest value\n\n      let sortedInitialState = [];\n      for (let i = 0; i <= indecesYArr[0]; i++) {\n        initialState.forEach((column) => {\n          if (column.indexY === i) sortedInitialState.push(column);\n        });\n      }\n\n      return sortedInitialState;\n    }\n\n    case CONSTANTS.ADD_COLUMN:\n      const newColumn = {\n        id: action.payload._id,\n        title: action.payload.title,\n        limit: action.payload.limit,\n        tasks: [],\n        index: action.payload.index,\n        indexX: action.payload.indexX,\n        indexY: action.payload.indexY,\n        info: action.payload.info,\n        color: action.payload.color,\n      };\n      return [...state, newColumn];\n\n    case CONSTANTS.ADD_TASK: {\n      let task = action.payload.tasks[action.payload.tasks.length - 1];\n\n      let newTask = {\n        id: task._id,\n        content: task.content,\n        columnID: task.columnId,\n        users: [],\n        priority: task.priority,\n        color: task.color,\n      };\n\n      const addTaskState = state.map((col) => {\n        if (col.id === newTask.columnID) {\n          col.limit--;\n          return {\n            ...col,\n            tasks: [...col.tasks, newTask],\n          };\n        } else return col;\n      });\n\n      return addTaskState;\n    }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n        type,\n        draggableId,\n        users,\n      } = action.payload;\n      const newState = [...state];\n\n      // dragging swimlanes around (index swap)\n      if (type === \"swimlane\") {\n        newState.map((column) => {\n          if (column.indexY === droppableIndexStart) {\n            column.indexY = droppableIndexEnd;\n            return column;\n          } else if (column.indexY === droppableIndexEnd) {\n            column.indexY = droppableIndexStart;\n            return column;\n          } else return column;\n        });\n        const highestIndexY =\n          newState.filter((column) => column.indexX === 0).length - 1;\n\n        let sortedSwapState = [];\n        for (let i = 0; i <= highestIndexY; i++) {\n          newState.forEach((column) => {\n            if (column.indexY === i) sortedSwapState.push(column);\n          });\n        }\n        return sortedSwapState;\n      }\n\n      if (type === \"user\" && droppableIdStart === droppableIdEnd) {\n        return newState;\n      }\n\n      if (type === \"user\") {\n        const user = users.find((user) => user._id === draggableId);\n        const updatedState = newState.map((column) => {\n          let tasks = column.tasks.map((task) => {\n            if (task.id === droppableIdEnd) {\n              const userAlreadyAdded = task.users.find(\n                (userAlreadyAdded) => userAlreadyAdded.name === user.name\n              );\n              if (!userAlreadyAdded)\n                return {\n                  ...task,\n                  users: [...task.users, user],\n                };\n              else return task;\n            } else return task;\n          });\n          return {\n            ...column,\n            tasks: tasks,\n          };\n        });\n        return updatedState;\n      }\n\n      // destination: same column\n      if (droppableIdStart === droppableIdEnd) {\n        const column = state.find((column) => droppableIdStart === column.id);\n        const task = column.tasks.splice(droppableIndexStart, 1);\n        column.tasks.splice(droppableIndexEnd, 0, ...task);\n      }\n\n      // destination: other column\n\n      if (droppableIdStart !== droppableIdEnd) {\n        // find the column where drag happened\n        const columnStart = state.find(\n          (column) => droppableIdStart === column.id\n        );\n        columnStart.limit++;\n\n        // pull out the task from this column\n        const task = columnStart.tasks.splice(droppableIndexStart, 1);\n        const newTask = task.map((task) => {\n          task.columnID = droppableIdEnd;\n          return task;\n        });\n        // find the column where drag ended\n        const columnEnd = state.find((column) => droppableIdEnd === column.id);\n        columnEnd.limit--;\n\n        // put the task into a new column\n        columnEnd.tasks.splice(droppableIndexEnd, 0, ...newTask);\n      }\n\n      return newState;\n\n    case CONSTANTS.EDIT_TASK: {\n      const {\n        _id,\n        content,\n        userId,\n        priority,\n        columnId,\n        progress,\n        color,\n        isLocked,\n      } = action.payload;\n      return state.map((column) => {\n        if (column.id === columnId) {\n          const newTasks = column.tasks.map((task) => {\n            if (task.id === _id) {\n              task.content = content;\n              task.priority = priority;\n              task.userID = userId;\n              task.progress = progress;\n              task.color = color;\n              task.isLocked = isLocked;\n              return task;\n            } else return task;\n          });\n          return { ...column, tasks: newTasks };\n        } else return column;\n      });\n    }\n\n    case CONSTANTS.DELETE_TASK: {\n      const { _id, columnID } = action.payload;\n      return state.map((column) => {\n        if (column.id === columnID) {\n          column.limit++;\n          const newTasks = column.tasks.filter((task) => task.id !== _id);\n          return { ...column, tasks: newTasks };\n        } else {\n          return column;\n        }\n      });\n    }\n\n    case CONSTANTS.EDIT_COLUMN: {\n      const { _id, title, limit, info } = action.payload;\n      return state.map((column) => {\n        if (column.id === _id) {\n          column.title = title;\n          column.limit = limit;\n          column.info = info;\n          return column;\n        } else {\n          return column;\n        }\n      });\n    }\n\n    case CONSTANTS.DELETE_COLUMN: {\n      const newStateDelete = [...state];\n      const columnID = action.payload;\n      const filtered = newStateDelete.filter(\n        (column) => column.id !== columnID\n      );\n      return filtered.map((col, index) => {\n        col.index = index;\n        return col;\n      });\n    }\n\n    case CONSTANTS.DELETE_USER: {\n      return state.map((column) => {\n        column.tasks.map((task) => {\n          task.users = task.users.filter((user) => user._id !== action.payload);\n          return task;\n        });\n        return column;\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default columnReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = [];\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.FETCH_USERS: {\n      let initialState = action.payload.map((user) => {\n        return {\n          _id: user._id,\n          name: user.name,\n          color: user.color,\n        };\n      });\n      return initialState;\n    }\n\n    case CONSTANTS.ADD_USER:\n      state.push(action.payload);\n      return state;\n\n    case CONSTANTS.DRAG_HAPPENED: {\n      const {\n        type,\n        draggableId,\n        droppableIdEnd,\n        droppableIdStart,\n        columns,\n      } = action.payload;\n      let newState = [...state];\n\n      if (type === \"user\" && droppableIdStart === droppableIdEnd) {\n        return state;\n      }\n\n      if (type === \"user\") {\n        const user = state.find((user) => user._id === draggableId);\n        columns.forEach((column) => {\n          column.tasks.forEach((task) => {\n            if (task.id === droppableIdEnd) {\n              const userAlreadyAdded = task.users.find(userAlreadyAdded => userAlreadyAdded.name === user.name)\n              if(!userAlreadyAdded)\n              newState = state.filter((user) => user._id !== draggableId);\n            }\n          });\n        });\n      }\n      return newState;\n    }\n\n    case CONSTANTS.DELETE_USER_BY_NAME: {\n      const deleteState = state.filter((user) => user.name !== action.payload);\n      return deleteState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport columnReducer from './columnReducer';\nimport userReducer from './userReducer';\n\nexport default combineReducers({\n    columns: columnReducer,\n    users: userReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/index';\n// import createLogger from 'redux-logger'\n\n\n// const middleware = [thunk, createLogger];\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(...middleware),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n );\n\nexport default store;","import React from \"react\";\nimport styled from \"styled-components\";\nimport ButtonOld from \"@material-ui/core/Button\";\n\nconst StyledButton = styled(ButtonOld)`\n&& {\n    color: white;\n    background: #333;\n}\n`;\n\nconst Button = ({ children, onClick }) => {\n    return (\n        <StyledButton data-testid=\"button\" variant=\"contained\"\n        onMouseDown={onClick}>{children}</StyledButton>\n    );\n};\n\nexport default Button;","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport styled from \"styled-components\";\n\nconst OpenFormButton = styled.div`\ndisplay: flex;\nalign-items: center;\ncursor: pointer;\nborder-radius: 3px;\nheight: 36px;\nwidth: 277px;\npadding-left: 10px;\nopacity: 0.8;\ncolor: white;\nbackground-color: inherit;\nmargin-left: 6px;\n\n&:hover {\n  background-color: rgba(0,0,0,0.2);\n  border: 1px solid rgba(1, 11, 15);\n}\n`;\n\nconst StyledIcon = styled(Icon)`\n  margin-left: 5px;\n  margin-right: 8px;\n  padding-bottom: 2px;\n`;\n\nconst OpenForm = ({ children, onClick }) => {\n  return (\n    <OpenFormButton onClick={onClick}>\n      <StyledIcon>add</StyledIcon>\n      <p style={{ flexShrink: 0 }}>{children}</p>\n    </OpenFormButton>\n  );\n};\n\nexport default OpenForm;","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Button from \"./Button\";\nimport { connect } from \"react-redux\";\nimport {\n  addColumn,\n  addTask,\n  fetchColumns,\n  addUser,\n  fetchUsers,\n} from \"../actions\";\nimport OpenForm from \"./OpenForm\";\nimport styled from \"styled-components\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport CloseSharpIcon from \"@material-ui/icons/CloseSharp\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport PriorityHighIcon from \"@material-ui/icons/PriorityHigh\";\nimport { SketchPicker } from \"react-color\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\n\nvar randomColor = require(\"randomcolor\");\n\nconst RadioOption = styled(FormControlLabel)`\n  && {\n    padding: 0px;\n    margin: 0px;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ContainerRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n`;\n\nconst ContainerRowJustified = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst StyledTextArea = styled(TextareaAutosize)`\n  border-radius: 3px;\n  color: #eee;\n  resize: none;\n  overflow: hidden;\n  outline: none;\n  background-color: rgba(255, 255, 255, 0.15);\n  border: 1px solid rgba(1, 11, 15);\n  margin: 0px 15px 10px 0px;\n  padding: 6px;\n\n  ::placeholder {\n    color: #eee;\n    font-size: 0.7rem;\n  }\n`;\n\nconst CloseIcon = styled(CloseSharpIcon)`\n  && {\n    cursor: pointer;\n    font-size: 2rem;\n    align-self: stretch;\n    margin-left: 20px;\n    margin-top: 3px;\n    opacity: 0.8;\n    &:hover {\n      opacity: 0.5;\n    }\n  }\n`;\n\nclass Create extends React.PureComponent {\n  state = {\n    formOpen: false,\n    content: \"\",\n    content2: \"\",\n    content3: \"\",\n    radioValue: \"normal\",\n    modalOpened: false,\n    color: {\n      r: \"99\",\n      g: \"118\",\n      b: \"127\",\n      a: \"1\",\n    },\n  };\n\n  handleClose = () => {\n    this.setState({ modalOpened: false });\n  };\n\n  handleChange = (color) => {\n    this.setState({ color: color.rgb });\n  };\n\n  openForm = () => {\n    this.setState({\n      formOpen: true,\n    });\n  };\n\n  closeForm = () => {\n    this.setState({\n      formOpen: false,\n    });\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      content: e.target.value,\n    });\n  };\n\n  handleAddColumn = () => {\n    const { content, content2, content3 } = this.state;\n    const { indexX, swimlanesNames, noColumns, columns } = this.props;\n    var color = randomColor({ luminosity: \"light\" });\n\n    const isNumber = /[0-9]/.test(content3);\n    const isNotEmptyString = !/^\\s*$/.test(content3);\n\n    if (content) {\n      this.setState({\n        content: \"\",\n        content2: \"\",\n        content3: \"\",\n        formOpen: false,\n      });\n\n      if (content.trim().length !== 0) {\n        let previousColumnX = columns.find(\n          (column) => column.indexX === indexX - 1 && column.indexY === 0\n        );\n\n        const newColumn = {\n          title: content,\n          indexY: 0,\n          indexX: indexX,\n          info: !/^\\s*$/.test(content2)\n            ? content2\n            : \"Task w tej kolumnie uznaje się za ukończony gdy:\",\n          limit: isNumber && isNotEmptyString ? content3 : -99999,\n          color: previousColumnX ? previousColumnX.color : color,\n        };\n        this.props.addColumn(newColumn);\n\n        if (!noColumns) {\n          swimlanesNames.forEach((swimlane, index) => {\n            let previousColumnX = columns.find(\n              (column) =>\n                column.indexX === indexX - 1 && column.indexY === index + 1\n            );\n\n            const newColumn = {\n              title: swimlane,\n              indexY: index + 1,\n              indexX: indexX,\n              info: /^\\s*$/.test(content2)\n                ? content2\n                : \"Task w tej kolumnie uznaje się za ukończony gdy:\",\n              limit: isNumber && isNotEmptyString ? content3 : -99999,\n              color: previousColumnX ? previousColumnX.color : color,\n            };\n            this.props.addColumn(newColumn);\n            this.props.fetchColumns();\n          });\n        }\n      }\n    }\n  };\n\n  handleAddSwimlane = () => {\n    const { content } = this.state;\n    const { indexX, indexY, columns } = this.props;\n    var color = randomColor({ luminosity: \"light\" });\n\n    if (content) {\n      this.setState({\n        content: \"\",\n        formOpen: false,\n      });\n\n      if (content.trim().length !== 0) {\n        for (let i = 0; i < indexX; i++) {\n          let previousColumnY = columns.find(\n            (column) => column.indexX === i && column.indexY === indexY - 1\n          );\n\n          const newColumn = {\n            title: content,\n            indexY: indexY,\n            indexX: i,\n            limit: previousColumnY.limit,\n            color: color,\n          };\n          this.props.addColumn(newColumn);\n          this.props.fetchColumns();\n        }\n      }\n    }\n  };\n\n  handleAddTask = () => {\n    const { columnID } = this.props;\n    const { content, radioValue, color } = this.state;\n\n    if (content) {\n      this.setState({\n        content: \"\",\n        formOpen: false,\n      });\n\n      if (content.trim().length !== 0) {\n        const newTask = {\n          content,\n          columnID,\n          priority: radioValue,\n          color: color,\n        };\n\n        this.props.addTask(newTask);\n      }\n    }\n  };\n\n  handleAddUser = async () => {\n    const { content, content2 } = this.state;\n    var color = randomColor({ luminosity: \"dark\" });\n\n    const isNumber = /[0-9]/.test(content2);\n\n    if (content && content2) {\n      this.setState({\n        content: \"\",\n        content2: \"\",\n        formOpen: false,\n      });\n\n      const wipLimit = isNumber && content2 < 99 ? content2 : 99;\n      if (content.trim().length !== 0 || content2.trim().length !== 0) {\n        const newUser = {\n          name: content,\n          color: color,\n        };\n\n        for (let i = 1; i <= wipLimit; i++) {\n          await this.props.addUser(newUser);\n        }\n        this.props.fetchUsers();\n      }\n    }\n  };\n\n  renderOpenForm = () => {\n    const { type } = this.props;\n    let buttonText = \"\";\n    switch (type) {\n      case \"isColumn\":\n        buttonText = \"Add a column\";\n        break;\n\n      case \"isSwimlane\":\n        buttonText = \"Add a swimlane\";\n        break;\n\n      default:\n        buttonText = \"Add a task\";\n    }\n\n    return (\n      <OpenForm onClick={this.openForm}>\n        <Icon>add</Icon>\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\n      </OpenForm>\n    );\n  };\n\n  RadioButtons() {\n    const handleChange = (event) =>\n      this.setState({\n        radioValue: event.target.value,\n      });\n\n    return (\n      <FormControl component=\"fieldset\">\n        <RadioGroup\n          row\n          aria-label=\"priority\"\n          name=\"priority\"\n          onChange={handleChange}\n          defaultValue=\"normal\"\n        >\n          <RadioOption\n            value=\"normal\"\n            control={<Radio style={{ color: \"white\" }} size=\"small\" />}\n            label={<PriorityHighIcon style={{ fontSize: \"1.4rem\" }} />}\n            labelPlacement=\"top\"\n          />\n          <RadioOption\n            value=\"high\"\n            control={<Radio style={{ color: \"orange\" }} size=\"small\" />}\n            label={\n              <PriorityHighIcon\n                style={{ color: \"orange\", fontSize: \"1.7rem\" }}\n              />\n            }\n            labelPlacement=\"top\"\n          />\n          <RadioOption\n            value=\"very high\"\n            control={<Radio style={{ color: \"red\" }} size=\"small\" />}\n            label={\n              <PriorityHighIcon style={{ color: \"red\", fontSize: \"2rem\" }} />\n            }\n            labelPlacement=\"top\"\n          />\n        </RadioGroup>\n      </FormControl>\n    );\n  }\n\n  renderSwitch = (type) => {\n    switch (type) {\n      case \"isColumn\": {\n        return (\n          <Container>\n            <StyledTextArea\n              style={{ width: \"300px\" }}\n              rowsMin={1}\n              autoFocus\n              placeholder=\"Set title...\"\n              value={this.content}\n              onChange={(e) =>\n                this.setState({\n                  content: e.target.value,\n                })\n              }\n            />\n            <StyledTextArea\n              style={{ width: \"300px\" }}\n              rowsMin={1}\n              placeholder=\"Set info...\"\n              value={this.content2}\n              onChange={(e) =>\n                this.setState({\n                  content2: e.target.value,\n                })\n              }\n            />\n            <ContainerRow>\n              <StyledTextArea\n                style={{ width: \"90px\" }}\n                rowsMin={1}\n                placeholder=\"Set limit...\"\n                value={this.content3}\n                onChange={(e) =>\n                  this.setState({\n                    content3: e.target.value,\n                  })\n                }\n              />\n              <Button onClick={this.handleAddColumn}>Add a column</Button>\n              <CloseIcon onClick={this.closeForm} />\n            </ContainerRow>\n          </Container>\n        );\n      }\n\n      case \"isUser\": {\n        return (\n          <ContainerRow>\n            <StyledTextArea\n              style={{ width: \"200px\", marginLeft: \"10px\" }}\n              rowsMin={1}\n              autoFocus\n              placeholder=\"Set name...\"\n              value={this.content}\n              onChange={(e) =>\n                this.setState({\n                  content: e.target.value,\n                })\n              }\n            />\n            <StyledTextArea\n              style={{ width: \"90px\" }}\n              rowsMin={1}\n              placeholder=\"Set limit...\"\n              value={this.content2}\n              onChange={(e) =>\n                this.setState({\n                  content2: e.target.value,\n                })\n              }\n            />\n            <Button onClick={this.handleAddUser}>Add a user</Button>\n            <CloseIcon onClick={this.closeForm} />\n          </ContainerRow>\n        );\n      }\n\n      case \"isSwimlane\": {\n        return (\n          <Container>\n            <ContainerRow>\n              <StyledTextArea\n                style={{ width: \"300px\" }}\n                rowsMin={1}\n                autoFocus\n                placeholder=\"Set title...\"\n                value={this.content}\n                onChange={(e) =>\n                  this.setState({\n                    content: e.target.value,\n                  })\n                }\n              />\n              <Button onClick={this.handleAddSwimlane}>Add a swimlane</Button>\n              <CloseIcon onClick={this.closeForm} />\n            </ContainerRow>\n          </Container>\n        );\n      }\n\n      default: {\n        return (\n          <Container>\n            <ContainerRowJustified>\n              <div>\n                <div\n                  style={{\n                    width: \"36px\",\n                    height: \"14px\",\n                    background: `rgba(${this.state.color.r}, ${this.state.color.g}, ${this.state.color.b}, ${this.state.color.a})`,\n                    border: \"1px solid white\",\n                    borderRadius: \"2px\",\n                    boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\n                    display: \"inline-block\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => {\n                    this.setState({\n                      modalOpened: true,\n                    });\n                  }}\n                ></div>\n                <Modal\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                  open={this.state.modalOpened}\n                  onClose={this.handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                  <Fade in={this.state.modalOpened}>\n                    <div>\n                      <SketchPicker\n                        color={this.state.color}\n                        onChange={this.handleChange}\n                      />\n                    </div>\n                  </Fade>\n                </Modal>\n              </div>\n              <CloseIcon\n                onClick={this.closeForm}\n                style={{ margin: \"0px 0px 5px 220px\" }}\n              />\n            </ContainerRowJustified>\n            <StyledTextArea\n              style={{ width: \"285px\" }}\n              rowsMin={1}\n              autoFocus\n              placeholder=\"Set content...\"\n              value={this.content}\n              onChange={(e) =>\n                this.setState({\n                  content: e.target.value,\n                })\n              }\n            />\n            <ContainerRowJustified>\n              {this.RadioButtons()}\n              <Button onClick={this.handleAddTask}>Add a task</Button>\n            </ContainerRowJustified>\n          </Container>\n        );\n      }\n    }\n  };\n\n  render() {\n    const { type } = this.props;\n\n    return this.state.formOpen ? (\n      <div>{this.renderSwitch(type)}</div>\n    ) : (\n      <OpenForm onClick={this.openForm}>\n        {type === \"isColumn\"\n          ? \"Add a column\"\n          : type === \"isSwimlane\"\n          ? \"Add a swimlane\"\n          : type === \"isUser\"\n          ? \"Add a user\"\n          : \"Add a task\"}\n      </OpenForm>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  columns: state.columns,\n});\n\nconst mapDispatchToProps = {\n  addTask,\n  addColumn,\n  fetchColumns,\n  fetchUsers,\n  addUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport styled from \"styled-components\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"./styles/react-confirm-alert.css\";\nimport { deleteUser, deleteUserByName } from '../actions/userActions';\nimport { dragStateSave } from \"../actions\";\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst UserBox = styled.div`\n    position: relative;\n    height: 35px;\n    width: 35px;\n`;\n\nconst SmallAvatar = styled(Avatar)`\n  && {\n    height: 30px;\n    width: 30px;\n    margin-right: 10cdpx;\n    border: 1px solid black;\n    font-weight: 500;\n  }\n`;\n\nconst SmallCloseIcon = styled(CloseIcon)`\n  && {\n    position: absolute;\n    display: none;\n    top: -5px;\n    right: -4px;\n    color: white;\n    height: 12px;\n    width: 12px;\n    opacity: 0.8;\n    ${UserBox}:hover & {\n        display: block;\n        cursor: pointer;\n    }\n  }\n`;\n\nconst User = ({ _id, name, index, color, isDragDisabled, dispatch, columns, droppableId}) => {\n\n  const handleDeleteUserByID = () => {\n    dispatch(deleteUser(_id));\n    const deleteUserState = columns;\n    deleteUserState.map(column => {\n      column.tasks.map(task => {\n        task.users = task.users.filter(user => user._id !== _id)\n        return task;\n      })\n      return column;\n    })\n    dispatch(dragStateSave())\n  }\n\n  const handleDeleteUserByName = () => {\n    dispatch(deleteUserByName(name));\n  }\n  \n  const submitDeleteUserByID = () => {\n    confirmAlert({\n      title: \"Alert!\",\n      message: \"Are you sure you want to remove \" + name + \" from this task?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => handleDeleteUserByID(),\n        },\n        {\n          label: \"No\",\n          onClick: () => {\n            return null;\n          },\n        },\n      ],\n      closeOnEscape: true,\n      closeOnClickOutside: true,\n    });\n  };\n\n  const submitDeleteUserByName = () => {\n    confirmAlert({\n      title: \"Alert!\",\n      message: \"Are you sure you want to delete \" + name + \" user?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => handleDeleteUserByName(),\n        },\n        {\n          label: \"No\",\n          onClick: () => {\n            return null;\n          },\n        },\n      ],\n      closeOnEscape: true,\n      closeOnClickOutside: true,\n    });\n  };\n\n  return (\n    <Draggable draggableId={_id} droppableId={droppableId} index={index} type=\"user\" isDragDisabled={isDragDisabled}>\n      {(provided) => (\n        <div\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n            <UserBox>\n            <SmallCloseIcon onClick={droppableId === \"users\" ? submitDeleteUserByName : submitDeleteUserByID}/>\n            <Tooltip title={name} arrow>\n          <SmallAvatar style={{ backgroundColor: color }}>\n            {name[0].toUpperCase()}\n          </SmallAvatar>\n          </Tooltip>\n          </UserBox>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nconst mapStateToProps = state => ({\n  columns: state.columns\n})\n\nexport default connect(mapStateToProps)(User);\n","import React from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst ProgressSlider = withStyles({\r\n  root: {\r\n    width: 293,\r\n    height: 8,\r\n    color: \"#304149\",\r\n    marginBottom: 8,\r\n    padding: 2,\r\n    opacity: 0.9,\r\n    \"&:hover\": {\r\n      opacity: 1\r\n    },\r\n  },\r\n  thumb: {\r\n    height: 8,\r\n    width: 8,\r\n    backgroundColor: \"#fff\",\r\n    marginTop: 0,\r\n    marginLeft: -3,\r\n    \"&:focus, &:hover, &$active\": {\r\n      boxShadow: \"inherit\",\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% -10px)\",\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  thumbColorSecondary: {\r\n    display: 'none'\r\n  }\r\n})(Slider);\r\n\r\nconst ProgressBar = ({ defaultValue, onChange, value, disabled }) => {\r\n  return disabled ? (\r\n    <ProgressSlider\r\n      color='secondary'\r\n      style={{opacity: 0.3}}\r\n      disabled={disabled}\r\n      onChange={onChange}\r\n      value={value}\r\n      valueLabelDisplay=\"auto\"\r\n      valueLabelFormat={(value) => value + \"%\"}\r\n      step={10}\r\n      defaultValue={defaultValue}\r\n    />\r\n  ) : (\r\n    <ProgressSlider\r\n      onChange={onChange}\r\n      value={value}\r\n      valueLabelDisplay=\"auto\"\r\n      valueLabelFormat={(value) => value + \"%\"}\r\n      step={10}\r\n      defaultValue={defaultValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTask, editTask } from \"../actions\";\r\nimport OpenForm from \"./OpenForm\";\r\nimport styled from \"styled-components\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport CloseSharpIcon from \"@material-ui/icons/CloseSharp\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport PriorityHighIcon from \"@material-ui/icons/PriorityHigh\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nconst RadioOption = styled(FormControlLabel)`\r\n  && {\r\n    padding: 0px;\r\n    margin: 0px;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ContainerRowJustified = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledTextArea = styled(TextareaAutosize)`\r\n  border-radius: 3px;\r\n  color: #eee;\r\n  resize: none;\r\n  overflow: hidden;\r\n  outline: none;\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n  border: 1px solid rgba(1, 11, 15);\r\n  margin: 0px 15px 10px 0px;\r\n  padding: 6px;\r\n\r\n  ::placeholder {\r\n    color: #eee;\r\n    font-size: 0.7rem;\r\n  }\r\n`;\r\n\r\nconst CloseIcon = styled(CloseSharpIcon)`\r\n  && {\r\n    cursor: pointer;\r\n    font-size: 2rem;\r\n    align-self: stretch;\r\n    margin-left: 20px;\r\n    margin-top: 3px;\r\n    opacity: 0.8;\r\n    &:hover {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n`;\r\n\r\nclass TaskForm extends React.PureComponent {\r\n  state = {\r\n    formOpen: false,\r\n    content: this.props.taskContent || \"\",\r\n    priorityRadioValue: this.props.taskPriority || \"normal\",\r\n    modalOpened: false,\r\n    color: this.props.taskColor || {\r\n      r: \"99\",\r\n      g: \"118\",\r\n      b: \"127\",\r\n      a: \"1\",\r\n    },\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({ modalOpened: false });\r\n  };\r\n\r\n  handleChangeColor = (color) => {\r\n    this.setState({ color: color.rgb });\r\n  };\r\n\r\n  handleOpenForm = () => {\r\n    this.setState({\r\n      formOpen: true,\r\n    });\r\n  };\r\n\r\n  handleCloseForm = () => {\r\n    if(this.props.isEditing) this.props.closeForm()\r\n    this.setState({\r\n      formOpen: false,\r\n    });\r\n  };\r\n\r\n  handleContentChange = (e) => {\r\n    this.setState({\r\n      content: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleAddTask = () => {\r\n    const { columnID } = this.props;\r\n    const { content, priorityRadioValue, color } = this.state;\r\n\r\n\r\n    if (content) {\r\n      this.setState({\r\n        content: \"\",\r\n        formOpen: false,\r\n      });\r\n\r\n      if (content.trim().length !== 0) {\r\n        const newTask = {\r\n          columnID,\r\n          content,\r\n          priority: priorityRadioValue,\r\n          color,\r\n        };\r\n\r\n        this.props.addTask(newTask);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleEditTask = () => {\r\n    const { taskID, columnID, taskUsers, isLocked } = this.props;\r\n    const { content, priorityRadioValue, color } = this.state;\r\n\r\n    console.log(content, priorityRadioValue, color)\r\n\r\n      if (content.trim().length !== 0) {\r\n        const editedTask = {\r\n          id: taskID,\r\n          content,\r\n          priority: priorityRadioValue,\r\n          color,\r\n          columnID,\r\n          users: taskUsers,\r\n          isLocked\r\n        };\r\n\r\n        this.props.editTask(editedTask);\r\n      }\r\n\r\n    this.props.closeForm()\r\n  };\r\n\r\n  RadioButtons() {\r\n    const handleChangePriority = (event) =>\r\n      this.setState({\r\n        priorityRadioValue: event.target.value,\r\n      });\r\n\r\n    return (\r\n      <FormControl component=\"fieldset\">\r\n        <RadioGroup\r\n          row\r\n          aria-label=\"priority\"\r\n          name=\"priority\"\r\n          onChange={handleChangePriority}\r\n          defaultValue={this.state.priorityRadioValue}\r\n        >\r\n          <RadioOption\r\n            value=\"normal\"\r\n            control={<Radio style={{ color: \"white\" }} size=\"small\" />}\r\n            label={<PriorityHighIcon style={{ fontSize: \"1.4rem\" }} />}\r\n            labelPlacement=\"top\"\r\n          />\r\n          <RadioOption\r\n            value=\"high\"\r\n            control={<Radio style={{ color: \"orange\" }} size=\"small\" />}\r\n            label={\r\n              <PriorityHighIcon\r\n                style={{ color: \"orange\", fontSize: \"1.7rem\" }}\r\n              />\r\n            }\r\n            labelPlacement=\"top\"\r\n          />\r\n          <RadioOption\r\n            value=\"very high\"\r\n            control={<Radio style={{ color: \"red\" }} size=\"small\" />}\r\n            label={\r\n              <PriorityHighIcon style={{ color: \"red\", fontSize: \"2rem\" }} />\r\n            }\r\n            labelPlacement=\"top\"\r\n          />\r\n        </RadioGroup>\r\n      </FormControl>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isEditing } = this.props;\r\n\r\n    return this.state.formOpen || isEditing ? (\r\n      <Container>\r\n        <ContainerRowJustified>\r\n          <div>\r\n            <div\r\n              style={{\r\n                width: \"36px\",\r\n                height: \"14px\",\r\n                background: `rgba(${this.state.color.r}, ${this.state.color.g}, ${this.state.color.b}, ${this.state.color.a})`,\r\n                border: \"1px solid white\",\r\n                borderRadius: \"2px\",\r\n                boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\r\n                display: \"inline-block\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                this.setState({\r\n                  modalOpened: true,\r\n                });\r\n              }}\r\n            ></div>\r\n            <Modal\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n              open={this.state.modalOpened}\r\n              onClose={this.handleCloseModal}\r\n              closeAfterTransition\r\n              BackdropComponent={Backdrop}\r\n              BackdropProps={{\r\n                timeout: 500,\r\n              }}\r\n            >\r\n              <Fade in={this.state.modalOpened}>\r\n                <div>\r\n                  <SketchPicker\r\n                    color={this.state.color}\r\n                    onChange={this.handleChangeColor}\r\n                  />\r\n                </div>\r\n              </Fade>\r\n            </Modal>\r\n          </div>\r\n          <CloseIcon\r\n            onClick={this.handleCloseForm}\r\n            style={{ margin: \"0px 0px 5px 220px\" }}\r\n          />\r\n        </ContainerRowJustified>\r\n        <StyledTextArea\r\n          style={{ width: \"285px\" }}\r\n          rowsMin={1}\r\n          autoFocus\r\n          onFocus={(e) => e.target.select()}\r\n          placeholder=\"Set a content...\"\r\n          value={this.state.content}\r\n          onChange={(e) => this.handleContentChange(e)}\r\n        />\r\n        <ContainerRowJustified>\r\n          {this.RadioButtons()}\r\n          <Button\r\n            onClick={isEditing ? this.handleEditTask : this.handleAddTask}\r\n          >\r\n            Save a task\r\n          </Button>\r\n        </ContainerRowJustified>\r\n      </Container>\r\n    ) : (\r\n      <OpenForm onClick={this.handleOpenForm}>Add a task</OpenForm>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addTask,\r\n  editTask,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(TaskForm);\r\n","import React, { useState } from \"react\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { editTask, deleteTask } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"./styles/react-confirm-alert.css\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { Typography, Card } from \"@material-ui/core\";\r\nimport PriorityHighIcon from \"@material-ui/icons/PriorityHigh\";\r\nimport User from \"./User\";\r\nimport BlockOutlinedIcon from \"@material-ui/icons/BlockOutlined\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport LockOpenOutlinedIcon from \"@material-ui/icons/LockOpenOutlined\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport TaskForm from \"./TaskForm\";\r\n\r\nconst TaskContainer = styled.div`\r\n  position: relative;\r\n  max-width: 100%;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst LockOpenIcon = styled(LockOpenOutlinedIcon)`\r\n  && {\r\n    position: absolute;\r\n    display: none;\r\n    right: 2px;\r\n    bottom: 50px;\r\n    opacity: 0.5;\r\n    ${TaskContainer}:hover & {\r\n      display: block;\r\n      cursor: pointer;\r\n    }\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BlockIcon = styled(BlockOutlinedIcon)`\r\n  && {\r\n    font-size: 5rem;\r\n    opacity: 0.8;\r\n    position: absolute;\r\n    right: 115px;\r\n    top: -4px;\r\n  }\r\n`;\r\n\r\nconst LockIcon = styled(LockOutlinedIcon)`\r\n  && {\r\n    position: absolute;\r\n    display: none;\r\n    right: 2px;\r\n    bottom: 50px;\r\n    opacity: 0.5;\r\n    ${TaskContainer}:hover & {\r\n      display: block;\r\n      cursor: pointer;\r\n    }\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n`;\r\n\r\nconst EditButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 1px;\r\n  top: 2px;\r\n  opacity: 0.5;\r\n  ${TaskContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst StyledTask = styled(Card)`\r\n  && {\r\n    background-color: inherit;\r\n    border: 1px solid #ccc;\r\n    -webkit-box-shadow: 1px 1px 3px 1px rgba(255, 255, 255, 0.1);\r\n    -moz-box-shadow: 1px 1px 3px 1px rgba(255, 255, 255, 0.1);\r\n    box-shadow: 1px 1px 3px 1px rgba(255, 255, 255, 0.1);\r\n    color: white;\r\n    padding: 8px 16px 2px 8px;\r\n\r\n    &:active {\r\n      border: 1px solid rgba(1, 11, 15);\r\n      background-color: rgba(0, 0, 0, 0.3);\r\n    }\r\n\r\n    &:hover {\r\n      border: 1px solid rgba(1, 11, 15);\r\n      background-color: rgba(0, 0, 0, 0.2);\r\n    }\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 2px;\r\n  bottom: 26px;\r\n  opacity: 0.5;\r\n  ${TaskContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst Users = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  width: 90%;\r\n  min-height: 32px;\r\n  margin-top: 2px;\r\n`;\r\n\r\nconst HighPriorityIcon = styled(PriorityHighIcon)`\r\n  position: absolute;\r\n  right: -2px;\r\n  top: 3px;\r\n  opacity: 0.9;\r\n  ${TaskContainer}:hover & {\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst Task = ({\r\n  content,\r\n  id,\r\n  columnID,\r\n  priority,\r\n  index,\r\n  dispatch,\r\n  users,\r\n  progress,\r\n  color,\r\n  isLocked,\r\n}) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isLockedBool, setIsLocked] = useState(isLocked);\r\n  const [progressValue, setProgress] = useState(progress);\r\n\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    from: { opacity: 0 },\r\n    config: { duration: 400 },\r\n  });\r\n\r\n  const closeForm = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleDeleteTask = () => {\r\n    dispatch(deleteTask({ id, columnID }));\r\n  };\r\n\r\n  const submitTaskDelete = () => {\r\n    confirmAlert({\r\n      title: \"Alert!\",\r\n      message: \"Are you sure you want to delete this task ?\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => handleDeleteTask(),\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => {\r\n            return null;\r\n          },\r\n        },\r\n      ],\r\n      closeOnEscape: true,\r\n      closeOnClickOutside: true,\r\n    });\r\n  };\r\n\r\n  const renderEditForm = () => {\r\n    return (\r\n      <TaskForm\r\n        taskID={id}\r\n        isEditing={true}\r\n        taskPriority={priority}\r\n        taskColor={color}\r\n        taskContent={content}\r\n        taskUsers={users}\r\n        isLocked={isLocked}\r\n        columnID={columnID}\r\n        closeForm={closeForm}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTask = () => {\r\n    return (\r\n      <animated.div style={props}>\r\n        {isLockedBool ? (\r\n          <Draggable draggableId={id} index={index} isDragDisabled={true}>\r\n            {(provided) => (\r\n              <TaskContainer\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                ref={provided.innerRef}\r\n                onDoubleClick={() => setIsEditing(true)}\r\n              >\r\n                <StyledTask\r\n                  style={{\r\n                    opacity: 0.3,\r\n                    borderTop: \"2px solid red\",\r\n                    cursor: \"auto\",\r\n                    backgroundColor: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\r\n                  }}\r\n                >\r\n                  {priority === \"normal\" ? (\r\n                    <HighPriorityIcon style={{ fontSize: \"1.4rem\" }} />\r\n                  ) : priority === \"high\" ? (\r\n                    <HighPriorityIcon\r\n                      style={{ color: \"orange\", fontSize: \"1.7rem\" }}\r\n                    />\r\n                  ) : (\r\n                    <HighPriorityIcon\r\n                      style={{ color: \"red\", fontSize: \"2rem\" }}\r\n                    />\r\n                  )}\r\n                  <BlockIcon />\r\n                  <LockOpenIcon\r\n                    fontSize=\"small\"\r\n                    onClick={() => {\r\n                      setIsLocked(false);\r\n                      dispatch(\r\n                        editTask({\r\n                          id,\r\n                          content,\r\n                          columnID,\r\n                          users,\r\n                          priority,\r\n                          progress,\r\n                          color,\r\n                          isLocked: false,\r\n                        })\r\n                      );\r\n                    }}\r\n                  />\r\n                  <EditButton\r\n                    fontSize=\"small\"\r\n                    onMouseDown={() => setIsEditing(true)}\r\n                  >\r\n                    edit\r\n                  </EditButton>\r\n                  <DeleteButton fontSize=\"small\" onMouseDown={submitTaskDelete}>\r\n                    delete\r\n                  </DeleteButton>\r\n                  <Typography>{content}</Typography>\r\n                  <Droppable\r\n                    droppableId={id}\r\n                    direction=\"horizontal\"\r\n                    type=\"user\"\r\n                  >\r\n                    {(provided) => (\r\n                      <Users\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                      >\r\n                        {users.map((user, index) => (\r\n                          <User\r\n                            _id={user._id}\r\n                            name={user.name}\r\n                            userLimit={user.userLimit}\r\n                            index={index}\r\n                            key={user._id}\r\n                            color={user.color}\r\n                            isDragDisabled={true}\r\n                            droppableId={id}\r\n                          />\r\n                        ))}\r\n                        {provided.placeholder}\r\n                      </Users>\r\n                    )}\r\n                  </Droppable>\r\n                </StyledTask>\r\n                <ProgressBar\r\n                  disabled={true}\r\n                  defaultValue={progress}\r\n                  value={progressValue}\r\n                  onChange={(e, newValue) => {\r\n                    setProgress(newValue);\r\n                    dispatch(\r\n                      editTask({\r\n                        id,\r\n                        content,\r\n                        columnID,\r\n                        users,\r\n                        priority,\r\n                        progress: newValue,\r\n                        color,\r\n                      })\r\n                    );\r\n                  }}\r\n                />\r\n              </TaskContainer>\r\n            )}\r\n          </Draggable>\r\n        ) : (\r\n          <Draggable draggableId={id} index={index}>\r\n            {(provided) => (\r\n              <TaskContainer\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                ref={provided.innerRef}\r\n                onDoubleClick={() => setIsEditing(true)}\r\n              >\r\n                <StyledTask\r\n                  style={{\r\n                    backgroundColor: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\r\n                  }}\r\n                >\r\n                  {priority === \"normal\" ? (\r\n                    <HighPriorityIcon style={{ fontSize: \"1.4rem\" }} />\r\n                  ) : priority === \"high\" ? (\r\n                    <HighPriorityIcon\r\n                      style={{ color: \"orange\", fontSize: \"1.7rem\" }}\r\n                    />\r\n                  ) : (\r\n                    <HighPriorityIcon\r\n                      style={{ color: \"red\", fontSize: \"2rem\" }}\r\n                    />\r\n                  )}\r\n                  <LockIcon\r\n                    fontSize=\"small\"\r\n                    onClick={() => {\r\n                      setIsLocked(true);\r\n                      dispatch(\r\n                        editTask({\r\n                          id,\r\n                          content,\r\n                          columnID,\r\n                          users,\r\n                          priority,\r\n                          progress,\r\n                          color,\r\n                          isLocked: true,\r\n                        })\r\n                      );\r\n                    }}\r\n                  />\r\n                  <EditButton\r\n                    fontSize=\"small\"\r\n                    onMouseDown={() => setIsEditing(true)}\r\n                  >\r\n                    edit\r\n                  </EditButton>\r\n                  <DeleteButton fontSize=\"small\" onMouseDown={submitTaskDelete}>\r\n                    delete\r\n                  </DeleteButton>\r\n                  <Typography>{content}</Typography>\r\n                  <Droppable\r\n                    droppableId={id}\r\n                    direction=\"horizontal\"\r\n                    type=\"user\"\r\n                  >\r\n                    {(provided) => (\r\n                      <Users\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                      >\r\n                        {users.map((user, index) => (\r\n                          <User\r\n                            _id={user._id}\r\n                            name={user.name}\r\n                            userLimit={user.userLimit}\r\n                            index={index}\r\n                            key={user._id}\r\n                            color={user.color}\r\n                            isDragDisabled={true}\r\n                            droppableId={id}\r\n                          />\r\n                        ))}\r\n                        {provided.placeholder}\r\n                      </Users>\r\n                    )}\r\n                  </Droppable>\r\n                </StyledTask>\r\n                <ProgressBar\r\n                  defaultValue={progress}\r\n                  value={progressValue}\r\n                  onChange={(e, newValue) => {\r\n                    setProgress(newValue);\r\n                    dispatch(\r\n                      editTask({\r\n                        id,\r\n                        content,\r\n                        columnID,\r\n                        users,\r\n                        priority,\r\n                        progress: newValue,\r\n                        color,\r\n                      })\r\n                    );\r\n                  }}\r\n                />\r\n              </TaskContainer>\r\n            )}\r\n          </Draggable>\r\n        )}\r\n      </animated.div>\r\n    );\r\n  };\r\n  return isEditing ? renderEditForm() : renderTask();\r\n};\r\n\r\nexport default connect()(Task);\r\n","import React from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport styled from \"styled-components\";\n\nconst LimitError = styled(ErrorIcon)`\n  color: rgba(255,0,0,0.9);\n  margin-right: 5px;\n`;\n\nconst TypographyStyled = styled(Typography)`\n    color: red;\n    text-shadow: none;\n\n    && {\n        font-weight: 100;\n    }\n`\n\nconst useStyles = makeStyles((theme) => ({\n  popover: {\n    pointerEvents: 'none',\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function MouseOverPopover() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <Typography\n        aria-owns={open ? 'mouse-over-popover' : undefined}\n        aria-haspopup=\"true\"\n        onMouseEnter={handlePopoverOpen}\n        onMouseLeave={handlePopoverClose}\n      >\n        <LimitError/>\n      </Typography>\n      <Popover\n        id=\"mouse-over-popover\"\n        className={classes.popover}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        <TypographyStyled>Task limit exceeded!</TypographyStyled>\n      </Popover>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\r\nimport Task from \"./Task\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { editColumn, deleteColumn, fetchColumns } from \"../actions\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"./styles/react-confirm-alert.css\";\r\nimport AllInclusiveIcon from \"@material-ui/icons/AllInclusive\";\r\nimport LimitError from \"./LimitError\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\n\r\nconst InfoIcon = styled(InfoOutlinedIcon)`\r\n  margin-left: 10px;\r\n  opacity: 0.5;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst ColumnContainer = styled.div`\r\n  color: white;\r\n  border: 1px solid rgba(1, 11, 15, 0.3);\r\n  -webkit-box-shadow: 1px 1px 3px 1px rgba(1, 11, 15, 0.3);\r\n  -moz-box-shadow: 1px 1px 3px 1px rgba(1, 11, 15, 0.3);\r\n  box-shadow: 1px 1px 3px 1px rgba(1, 11, 15, 0.3);\r\n  border-radius: 3px;\r\n  background-color: rgba(0,0,0,0.1);\r\n  width: 300px;\r\n  height: 100%;\r\n  margin-right: 12px;\r\n  padding: 8px;\r\n\r\n  &:active {\r\n    border: 1px solid rgba(0, 0, 0);\r\n    background-color: rgba(0,0,0,0.3)\r\n    }\r\n\r\n  &:hover {\r\n    border: 1px solid rgba(0, 0, 0);\r\n    background-color: rgba(0,0,0,0.2)\r\n    }\r\n\r\n  .\r\n`;\r\n\r\nconst StyledInputTitle = styled.input`\r\n  width: 80%;\r\n  background-color: inherit;\r\n  border: none;\r\n  outline: none;\r\n  border-bottom: 2px solid #03a8f45e;\r\n  margin-bottom: 5px;\r\n  margin-left: 23px;\r\n  font-size: 1.4rem;\r\n  text-align: center;\r\n  padding: 5px;\r\n  color: white;\r\n`;\r\n\r\nconst StyledInputLimit = styled.input`\r\n  width: 8%;\r\n  background-color: inherit;\r\n  border: none;\r\n  outline: none;\r\n  border-bottom: 2px solid #03a8f45e;\r\n  margin-bottom: 5px;\r\n  margin-left: 0px;\r\n  text-size: 1.4rem;\r\n  text-align: center;\r\n  padding: 5px;\r\n  color: white;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n  opacity: 0.5;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst ColumnTitle = styled.h3`\r\n  cursor: text;\r\n  flex-grow: 2;\r\n  text-transform: uppercase;\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst Limit = styled.h3`\r\n  margin-left: 10px;\r\n  min-width: 24px;\r\n  min-height: 28.8px;\r\n  margin-bottom: 5px;\r\n  margin-right: 10px;\r\n  cursor: text;\r\n  text-transform: uppercase;\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst Line = styled.div`\r\n  width: 96%;\r\n  height: 1px;\r\n`;\r\n\r\nconst Column = ({\r\n  title,\r\n  tasks,\r\n  limit,\r\n  id,\r\n  index,\r\n  indexX,\r\n  indexY,\r\n  dispatch,\r\n  columns,\r\n  info,\r\n  color\r\n}) => {\r\n  const [isEditingTitle, setIsEditingTitle] = useState(false);\r\n  const [isEditingLimit, setIsEditingLimit] = useState(false);\r\n  const [isVisible, setIsVisible] = useState(true);\r\n\r\n  const renderEditInput = (value) => {\r\n    return isEditingTitle ? (\r\n      <form onSubmit={handleFinishEditing}>\r\n        <StyledInputTitle\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          value={value}\r\n          autoFocus\r\n          onFocus={handleFocus}\r\n          onBlur={closeForm}\r\n        />\r\n      </form>\r\n    ) : (\r\n      <form onSubmit={handleFinishEditing}>\r\n        <StyledInputLimit\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          value={value}\r\n          autoFocus\r\n          onFocus={handleFocus}\r\n          onBlur={closeForm}\r\n        />\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const closeForm = () => {\r\n    setIsEditingTitle(false);\r\n    setIsEditingLimit(false);\r\n  };\r\n\r\n  const handleFocus = (e) => {\r\n    e.target.select();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (isEditingTitle) title = e.target.value;\r\n    if (isEditingLimit) limit = e.target.value;\r\n  };\r\n\r\n  const handleFinishEditing = () => {\r\n    let validatedColumnLimit = limit;\r\n\r\n    if (!/[0-9]/.test(validatedColumnLimit)) {\r\n      validatedColumnLimit = -99999;\r\n    }\r\n\r\n    setIsEditingTitle(false);\r\n    setIsEditingLimit(false);\r\n\r\n    if (title.trim().length !== 0) {\r\n      const column = {\r\n        id,\r\n        title: title,\r\n        limit: validatedColumnLimit,\r\n        info,\r\n        tasks,\r\n        index,\r\n        indexX,\r\n        indexY,\r\n      };\r\n      dispatch(editColumn(column));\r\n    }\r\n  };\r\n\r\n  const handleDeleteColumn = () => {\r\n    const swimlanesOfColumn = columns.filter(\r\n      (column) => column.indexX === indexX\r\n    );\r\n    swimlanesOfColumn.forEach((column) => {\r\n      dispatch(deleteColumn(column.id));\r\n      dispatch(fetchColumns());\r\n    });\r\n  };\r\n\r\n  const handleDeleteSwimlane = () => {\r\n    const columnsOfSwimlane = columns.filter(\r\n      (column) => column.indexY === indexY\r\n    );\r\n    columnsOfSwimlane.forEach((column) => {\r\n      dispatch(deleteColumn(column.id));\r\n      dispatch(fetchColumns());\r\n    });\r\n  };\r\n\r\n  const submitColumnDelete = () => {\r\n    confirmAlert({\r\n      title: \"Alert!\",\r\n      message: \"Are you sure you want to delete this column ?\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => handleDeleteColumn(),\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => {\r\n            return null;\r\n          },\r\n        },\r\n      ],\r\n      closeOnEscape: true,\r\n      closeOnClickOutside: true,\r\n    });\r\n  };\r\n\r\n  const submitSwimlaneDelete = () => {\r\n    confirmAlert({\r\n      title: \"Alert!\",\r\n      message: \"Are you sure you want to delete this swimlane ?\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => handleDeleteSwimlane(),\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => {\r\n            return null;\r\n          },\r\n        },\r\n      ],\r\n      closeOnEscape: true,\r\n      closeOnClickOutside: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <Line style={{ backgroundColor: color }} />\r\n    <ColumnContainer>\r\n      {isEditingTitle || isEditingLimit ? (\r\n        renderEditInput()\r\n      ) : (\r\n        <TitleContainer>\r\n          {indexY === 0 || indexX === 0 ? null : (\r\n            <Limit onClick={() => setIsEditingLimit(true)}>\r\n              {limit <= -9999 ? (\r\n                <AllInclusiveIcon />\r\n              ) : limit <= 0 ? (\r\n                <LimitError />\r\n              ) : (\r\n                limit\r\n              )}\r\n            </Limit>\r\n          )}\r\n\r\n          {indexY > 0 && indexX > 0 ? null : (\r\n            <ColumnTitle onClick={() => setIsEditingTitle(true)}>\r\n              {title}\r\n            </ColumnTitle>\r\n          )}\r\n\r\n          {indexY === 0 && indexX > 0 ? (\r\n            <Tooltip title={info} interactive arrow>\r\n              <InfoIcon />\r\n            </Tooltip>\r\n          ) : null}\r\n\r\n          {(indexY > 0 && indexX > 0) ||\r\n          (indexX === 0 && indexY === 0) ? null : indexY === 0 ? (\r\n            <DeleteButton onClick={submitColumnDelete}>delete</DeleteButton>\r\n          ) : (\r\n            <DeleteButton onClick={submitSwimlaneDelete}>delete</DeleteButton>\r\n          )}\r\n\r\n          {indexY === 0 || indexX === 0 ? null : isVisible ? (\r\n            <VisibilityIcon\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => setIsVisible(false)}\r\n            />\r\n          ) : (\r\n            <VisibilityOffIcon\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => setIsVisible(true)}\r\n            />\r\n          )}\r\n        </TitleContainer>\r\n      )}\r\n      {indexY === 0 || indexX === 0 ? null : isVisible ? (\r\n        <Droppable droppableId={id}>\r\n          {(provided) => (\r\n            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n              {tasks.map((task, index) => (\r\n                <Task\r\n                  id={task.id}\r\n                  index={index}\r\n                  key={task.id}\r\n                  content={task.content}\r\n                  columnID={task.columnID}\r\n                  userID={task.userID}\r\n                  priority={task.priority}\r\n                  users={task.users}\r\n                  progress={task.progress}\r\n                  color={task.color}\r\n                  isLocked={task.isLocked}\r\n                />\r\n              ))}\r\n              {provided.placeholder}\r\n              <TaskForm columnID={id} />\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      ) : null}\r\n    </ColumnContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  columns: state.columns,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Column);\r\n","import React from \"react\";\nimport Column from \"./Column\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst ColumnsContainerRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  margin-bottom: 30px;\n`;\n\nconst Swimlane = ({ columns, indexY }) => {\n  const filteredColumns = columns.filter((column) => column.indexY === indexY);\n  const sortedColumns = filteredColumns.sort((colA, colB) => {\n    if (colA.indexX > colB.indexX) return 1;\n    else return -1;\n  });\n\n  return indexY === 0 ? (\n    <ColumnsContainerRow>\n      {sortedColumns.map((column, index) => (\n          <Column\n            id={column.id}\n            key={column.id}\n            title={column.title}\n            tasks={column.tasks}\n            index={column.index}\n            limit={column.limit}\n            indexX={column.indexX}\n            indexY={column.indexY}\n            info={column.info}\n            color={column.color}\n          />\n      ))}\n    </ColumnsContainerRow>\n  ) : (\n    <Draggable key={indexY} draggableId={String(indexY)} index={indexY}>\n      {(provided) => (\n        <ColumnsContainerRow\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n        >\n          {sortedColumns.map((column, index) =>\n            column.indexY > 0 ? (\n              <div {...provided.dragHandleProps} key={index}>\n                <Column\n                  id={column.id}\n                  key={column.id}\n                  title={column.title}\n                  tasks={column.tasks}\n                  index={column.index}\n                  limit={column.limit}\n                  indexX={column.indexX}\n                  indexY={column.indexY}\n                  info={column.info}\n                  color={column.color}\n                />\n              </div>\n            ) : null\n          )}\n        </ColumnsContainerRow>\n      )}\n    </Draggable>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  columns: state.columns,\n});\n\nexport default connect(mapStateToProps)(Swimlane);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport User from \"./User\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport Create from './Create';\nimport * as _ from \"lodash\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-left: 20px;\n  margin-bottom: 20px;\n`;\n\n// when creating a user remember to always create it 'userLimit' times\nconst Navbar = ({ users }) => {\n  const uniqueUsers = _.uniqBy(users, \"name\");\n\n  return (\n    <Droppable droppableId=\"users\" direction=\"horizontal\" type=\"user\">\n      {(provided) => (\n        <Container {...provided.droppableProps} ref={provided.innerRef}>\n          {uniqueUsers.map((user, index) => (\n            <User\n              _id={user._id}\n              name={user.name}\n              index={index}\n              key={user._id}\n              color={user.color}\n              droppableId=\"users\"\n            />\n          ))}\n          {provided.placeholder}\n        <Create type=\"isUser\"/>\n        </Container>\n      )}\n    </Droppable>\n  );\n};\n\nexport default connect()(Navbar);\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Create from \"./Create\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { sort } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport { fetchColumns, dragStateSave, fetchUsers, deleteUser, dragStateSaveUsers } from \"../actions/\";\r\nimport Swimlane from \"./Swimlane\";\r\nimport Navbar from './Navbar';\r\nvar randomColor = require(\"randomcolor\");\r\n\r\nconst ColumnsContainerColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst FirstRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\n\r\nclass App extends PureComponent {\r\n  componentDidMount() {\r\n    this.props.fetchColumns();\r\n    this.props.fetchUsers();\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    this.props.sort(\r\n      source.droppableId,\r\n      destination.droppableId,\r\n      source.index,\r\n      destination.index,\r\n      draggableId,\r\n      type\r\n    );\r\n\r\n    this.props.dragStateSave();\r\n    this.props.dragStateSaveUsers();\r\n  };\r\n\r\n  getIndecesY = () => {\r\n    const { columns } = this.props;\r\n    let indecesY = new Set();\r\n    columns.forEach((column) => indecesY.add(column.indexY));\r\n\r\n    return Array.from(indecesY);\r\n  };\r\n\r\n  getHighestIndexY = () => {\r\n    const { columns } = this.props;\r\n    const indecesY = new Set();\r\n    columns.forEach((column) => indecesY.add(column.indexY));\r\n    const indecesYArr = Array.from(indecesY).sort().reverse(); // first element must be highest value\r\n\r\n    return indecesYArr[0] + 1;\r\n  };\r\n\r\n  getHighestIndexX = () => {\r\n    const { columns } = this.props;\r\n    const indecesX = new Set();\r\n    columns.forEach((column) => indecesX.add(column.indexX));\r\n    const indecesXArr = Array.from(indecesX).sort().reverse(); // first element must be highest value\r\n\r\n    return indecesXArr[0] + 1;\r\n  };\r\n\r\n  getSwimlanesNames = () => {\r\n    const { columns } = this.props;\r\n    let swimlaneNames = [];\r\n    columns.forEach((column) =>\r\n      column.indexY > 0 && column.indexX === 0\r\n        ? swimlaneNames.push(column.title)\r\n        : null\r\n    );\r\n\r\n    return swimlaneNames.sort((a, b) => (a.indexY > b.indexY ? 1 : 0));\r\n  };\r\n\r\n  render() {\r\n    const { columns, users } = this.props;\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Navbar users={users}/>\r\n        <FirstRow key={0}>\r\n          <Swimlane indexY={0} key={0} color={randomColor()} />\r\n          {columns.length > 0 ? (\r\n            <Create\r\n              type={\"isColumn\"}\r\n              indexX={this.getHighestIndexX()}\r\n              swimlanesNames={this.getSwimlanesNames()}\r\n            />\r\n          ) : (\r\n            <Create type={\"isColumn\"} indexX={0} noColumns />\r\n          )}\r\n        </FirstRow>\r\n        <Droppable droppableId=\"swimlanes\" type=\"swimlane\">\r\n          {(provided) => (\r\n            <ColumnsContainerColumn\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              <div>\r\n                {this.getIndecesY().map((indexY, index) =>\r\n                  index === 0 ? null : (\r\n                    <Swimlane\r\n                      indexY={indexY}\r\n                      key={indexY}\r\n                      color={randomColor()}\r\n                    />\r\n                  )\r\n                )}\r\n                {provided.placeholder}\r\n                {columns.length > 0 ? (\r\n                  <Create\r\n                    type={\"isSwimlane\"}\r\n                    indexY={this.getHighestIndexY()}\r\n                    indexX={this.getHighestIndexX()}\r\n                  />\r\n                ) : null}\r\n              </div>\r\n            </ColumnsContainerColumn>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  columns: state.columns,\r\n  users: state.users\r\n});\r\n\r\nconst mapDispatchToProps = { fetchColumns, sort, dragStateSave, fetchUsers, deleteUser, dragStateSaveUsers };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/index'\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>,\ndocument.getElementById(\"root\")\n);"],"sourceRoot":""}