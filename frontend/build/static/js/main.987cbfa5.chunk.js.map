{"version":3,"sources":["actions/columnActions.js","actions/index.js","reducers/columnReducer.js","reducers/index.js","store/index.js","components/Form.js","components/Button.js","components/Task.js","actions/taskActions.js","components/OpenForm.js","components/Create.js","components/LimitError.js","components/Column.js","components/App.js","index.js"],"names":["dragStateSave","columns","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","newState","type","CONSTANTS","FETCH_COLUMNS","payload","ADD_TASK","ADD_COLUMN","DRAG_HAPPENED","EDIT_TASK","DELETE_TASK","EDIT_COLUMN","DELETE_COLUMN","initialState","columnReducer","state","action","map","column","tasks","task","id","_id","content","columnID","columnId","priority","title","limit","index","sort","a","b","newColumn","length","newTask","addTaskState","col","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","splice","find","columnStart","columnEnd","userId","newTasks","userID","filter","newStateDelete","filtered","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Container","styled","div","StyledTextArea","TextareaAutosize","ButtonContainer","Form","React","memo","placeholder","onChange","closeForm","children","rowsMin","autoFocus","value","e","onBlur","StyledButton","ButtonOld","Button","onClick","variant","onMouseDown","TaskContainer","EditButton","Icon","StyledTask","Card","DeleteButton","HighPriorityIcon","PriorityHighIcon","Task","useState","isEditing","setIsEditing","taskContent","setTaskContent","props","useSpring","opacity","from","config","duration","handleChange","target","saveTask","preventDefault","trim","editedTask","editTask","handleDeleteTask","deletedTask","submitTaskDelete","confirmAlert","message","buttons","label","closeOnEscape","closeOnClickOutside","style","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","fontSize","CardContent","Typography","connect","OpenFormButton","StyledIcon","OpenForm","flexShrink","Create","formOpen","openForm","setState","handleInputChange","handleAddColumn","addColumn","handleAddTask","addTask","renderOpenForm","buttonText","isColumn","this","PureComponent","mapDispatchToProps","LimitError","ErrorIcon","TypographyStyled","useStyles","makeStyles","theme","popover","pointerEvents","paper","padding","spacing","MouseOverPopover","classes","anchorEl","setAnchorEl","handlePopoverClose","open","Boolean","aria-owns","undefined","aria-haspopup","onMouseEnter","event","currentTarget","onMouseLeave","Popover","className","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","ColumnContainer","StyledInputTitle","input","StyledInputLimit","TitleContainer","ColumnTitle","h3","Limit","isEditingTitle","setIsEditingTitle","isEditingLimit","setIsEditingLimit","handleFocus","select","handleFinishEditing","validatedColumnLimit","test","editedColumn","editColumn","handleDeleteColumn","deletedColumnId","deleteColumn","filteredColumns","submitColumnDelete","key","onSubmit","onFocus","droppableId","droppableProps","ColumnsContainer","App","onDragEnd","result","destination","source","fetchColumns","direction","Column","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.987cbfa5.chunk.js","sourcesContent":["import {CONSTANTS} from '../actions'\r\n\r\nexport function fetchColumns() {\r\n  return (dispatch) => {\r\n    fetch('/all')\r\n      .then(res => res.json())\r\n      .then(columns => dispatch({\r\n        type: CONSTANTS.FETCH_COLUMNS,\r\n        payload: columns\r\n      }));\r\n  }\r\n}\r\n\r\nexport function addColumn(column) {\r\n  return (dispatch) => {\r\n    fetch('/columns/add/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(column)\r\n    })\r\n      .then(res => res.json())\r\n      .then(newColumn => dispatch({\r\n        type: CONSTANTS.ADD_COLUMN,\r\n        payload: newColumn\r\n      }));\r\n  }\r\n}\r\n\r\nexport const sort = (\r\n    droppableIdStart,\r\n    droppableIdEnd,\r\n    droppableIndexStart,\r\n    droppableIndexEnd,\r\n    draggableId,\r\n    type\r\n) => {\r\n    return {\r\n        type: CONSTANTS.DRAG_HAPPENED,\r\n        payload: {\r\n            droppableIdStart,\r\n            droppableIdEnd,\r\n            droppableIndexStart,\r\n            droppableIndexEnd,\r\n            draggableId,\r\n            type\r\n        }\r\n    }\r\n}\r\n\r\nexport function dragStateSave(columns) {\r\n  return (dispatch) => {\r\n    fetch('/all', {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(columns)\r\n    })\r\n      .then(res => res.json())\r\n      .then(newState => dispatch({\r\n        type: CONSTANTS.FETCH_COLUMNS,\r\n        payload: newState\r\n      }));\r\n  }\r\n}\r\n\r\nexport function editColumn(column) {\r\n  return (dispatch) => {\r\n    fetch('/columns/' + column.id, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(column)\r\n    })\r\n      .then(res => res.json())\r\n      .then(editedColumn => dispatch({\r\n        type: CONSTANTS.EDIT_COLUMN,\r\n        payload: editedColumn\r\n      }));\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function deleteColumn(id) {\r\n  return (dispatch) => {\r\n    fetch('/columns/' + id, {\r\n      method: 'DELETE'\r\n    })\r\n      .then(res => res.json())\r\n      .then(deletedColumnId => dispatch({\r\n        type: CONSTANTS.DELETE_COLUMN,\r\n        payload: deletedColumnId\r\n      }));\r\n  }\r\n}","export * from './columnActions';\r\nexport * from './taskActions';\r\n\r\nexport const CONSTANTS = {\r\n    ADD_TASK: \"ADD_TASK\",\r\n    ADD_COLUMN: \"ADD_COLUMN\",\r\n    DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n    EDIT_TASK: \"EDIT_TASK\",\r\n    DELETE_TASK: \"DELETE_TASK\",\r\n    EDIT_COLUMN: \"EDIT_COLUMN\",\r\n    DELETE_COLUMN: \"DELETE_COLUMN\",\r\n    FETCH_COLUMNS: \"FETCH_COLUMNS\"\r\n};","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = [];\r\n\r\nconst columnReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.FETCH_COLUMNS:\r\n      let initialState = action.payload.map((column) => {\r\n        let tasks = column.tasks.map((task) => {\r\n          return {\r\n            id: task._id,\r\n            content: task.content,\r\n            columnID: task.columnId,\r\n            priority: task.priority,\r\n          };\r\n        });\r\n        return {\r\n          id: column._id,\r\n          title: column.title,\r\n          limit: column.limit,\r\n          tasks: tasks,\r\n          index: column.index,\r\n        };\r\n      });\r\n\r\n      return initialState.sort((a, b) => {\r\n        if (a.index > b.index) return 1;\r\n        else return -1;\r\n      });\r\n\r\n    case CONSTANTS.ADD_COLUMN:\r\n      const newColumn = {\r\n        id: action.payload._id,\r\n        title: action.payload.title,\r\n        limit: action.payload.limit,\r\n        tasks: [],\r\n        index: action.payload.index,\r\n      };\r\n      return [...state, newColumn];\r\n\r\n    case CONSTANTS.ADD_TASK: {\r\n      let task = action.payload.tasks[action.payload.tasks.length - 1];\r\n\r\n      let newTask = {\r\n        id: task._id,\r\n        content: task.content,\r\n        columnID: task.columnId,\r\n      };\r\n\r\n      const addTaskState = state.map((col) => {\r\n        if (col.id === newTask.columnID) {\r\n          col.limit--;\r\n          return {\r\n            ...col,\r\n            tasks: [...col.tasks, newTask],\r\n          };\r\n        } else return col;\r\n      });\r\n\r\n      return addTaskState;\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED:\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        type,\r\n      } = action.payload;\r\n      const newState = [...state];\r\n\r\n      // dragging columns around (index swap)\r\n      if (type === \"column\") {\r\n        const column = newState.splice(droppableIndexStart, 1);\r\n        newState.splice(droppableIndexEnd, 0, ...column);\r\n        newState.map((col, index) => {\r\n          col.index = index;\r\n          return col;\r\n        });\r\n        return newState;\r\n      }\r\n\r\n      // destination: same column\r\n\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const column = state.find((column) => droppableIdStart === column.id);\r\n        const task = column.tasks.splice(droppableIndexStart, 1);\r\n        column.tasks.splice(droppableIndexEnd, 0, ...task);\r\n      }\r\n\r\n      // destination: other column\r\n\r\n      if (droppableIdStart !== droppableIdEnd) {\r\n        // find the column where drag happened\r\n        const columnStart = state.find(\r\n          (column) => droppableIdStart === column.id\r\n        );\r\n        columnStart.limit++;\r\n\r\n        // pull out the task from this column\r\n        const task = columnStart.tasks.splice(droppableIndexStart, 1);\r\n        const newTask = task.map((task) => {\r\n          task.columnID = droppableIdEnd;\r\n          return task;\r\n        });\r\n        // find the column where drag ended\r\n        const columnEnd = state.find((column) => droppableIdEnd === column.id);\r\n        columnEnd.limit--;\r\n\r\n        // put the task into a new column\r\n        columnEnd.tasks.splice(droppableIndexEnd, 0, ...newTask);\r\n      }\r\n\r\n      return newState;\r\n\r\n    case CONSTANTS.EDIT_TASK: {\r\n      const { _id, content, userId, priority, columnId } = action.payload;\r\n      return state.map((column) => {\r\n        if (column.id === columnId) {\r\n          const newTasks = column.tasks.map((task) => {\r\n            if (task.id === _id) {\r\n              task.content = content;\r\n              task.priority = priority;\r\n              task.userID = userId;\r\n              return task;\r\n            } else return task;\r\n          });\r\n          return { ...column, tasks: newTasks };\r\n        } else return column;\r\n      });\r\n    }\r\n\r\n    case CONSTANTS.DELETE_TASK: {\r\n      const { _id, columnID } = action.payload;\r\n      return state.map((column) => {\r\n        if (column.id === columnID) {\r\n          column.limit++;\r\n          const newTasks = column.tasks.filter((task) => task.id !== _id);\r\n          return { ...column, tasks: newTasks };\r\n        } else {\r\n          return column;\r\n        }\r\n      });\r\n    }\r\n\r\n    case CONSTANTS.EDIT_COLUMN: {\r\n      const { _id, title, limit } = action.payload;\r\n      return state.map((column) => {\r\n        if (column.id === _id) {\r\n          column.title = title;\r\n          column.limit = limit;\r\n          return column;\r\n        } else {\r\n          return column;\r\n        }\r\n      });\r\n    }\r\n\r\n    case CONSTANTS.DELETE_COLUMN: {\r\n      const newStateDelete = [...state];\r\n      const columnID = action.payload;\r\n      const filtered = newStateDelete.filter(\r\n        (column) => column.id !== columnID\r\n      );\r\n      return filtered.map((col, index) => {\r\n        col.index = index;\r\n        return col;\r\n      });\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default columnReducer;\r\n","import { combineReducers } from 'redux';\r\nimport columnReducer from './columnReducer';\r\n\r\nexport default combineReducers({\r\n    columns: columnReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers/index';\r\n// import createLogger from 'redux-logger'\r\n\r\nconst initialState = {};\r\n\r\n// const middleware = [thunk, createLogger];\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n );\r\n\r\nexport default store;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\n\r\nconst Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nconst StyledTextArea = styled(TextareaAutosize)`\r\n  border-radius: 3px;\r\n  width: 295px;\r\n  color: #eee;\r\n  resize: none;\r\n  overflow: hidden;\r\n  outline: none;\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n  border: 1px solid rgba(1, 11, 15);\r\n\r\n\r\n  ::placeholder {\r\n    color: #eee;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 6px;\r\n  margin-bottom: 6px;\r\n`;\r\n\r\nconst Form = React.memo(\r\n  ({ placeholder, content = \"\", onChange, closeForm, children }) => {\r\n    return (\r\n      <Container>\r\n        <StyledTextArea\r\n          rowsMin={2}\r\n          autoFocus\r\n          placeholder={placeholder}\r\n          value={content}\r\n          onChange={(e) => onChange(e)}\r\n          onBlur={closeForm}\r\n        />\r\n        <ButtonContainer>\r\n          {children}\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ButtonOld from \"@material-ui/core/Button\";\r\n\r\nconst StyledButton = styled(ButtonOld)`\r\n&& {\r\n    color: white;\r\n    background: #333;\r\n}\r\n`;\r\n\r\nconst Button = ({ children, onClick }) => {\r\n    return (\r\n        <StyledButton variant=\"contained\"\r\n        onMouseDown={onClick}>{children}</StyledButton>\r\n    );\r\n};\r\n\r\nexport default Button;","import React, { useState } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Form from \"./Form\";\r\nimport { editTask, deleteTask } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"./Button\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { CardContent, Typography, Card } from \"@material-ui/core\";\r\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\r\n\r\nconst TaskContainer = styled.div`\r\n  margin: 0 0 8px 0;\r\n  position: relative;\r\n  max-width: 100%;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst EditButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  top: 5px;\r\n  opacity: 0.5;\r\n  ${TaskContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst StyledTask = styled(Card)`\r\n  && {\r\n    background-color: inherit;\r\n    border: 1px solid #ccc;\r\n    -webkit-box-shadow: 1px 1px 3px 1px rgba(255, 255, 255, 0.1);\r\n    -moz-box-shadow: 1px 1px 3px 1px rgba(255, 255, 255, 0.1);\r\n    box-shadow: 1px 1px 3px 1px rgba(255, 255, 255, 0.1);\r\n    color: white;\r\n    padding-right: 16px;\r\n        \r\n    &:active {\r\n      border: 1px solid rgba(1, 11, 15);\r\n      background-color: rgba(0, 0, 0, 0.3);\r\n    }\r\n  \r\n    &:hover {\r\n      border: 1px solid rgba(1, 11, 15);\r\n      background-color: rgba(0, 0, 0, 0.2);\r\n    }\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  bottom: 5px;\r\n  opacity: 0.5;\r\n  ${TaskContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst HighPriorityIcon = styled(PriorityHighIcon)`\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 5px;\r\n  color: red;\r\n\r\n\r\n  ${TaskContainer}:hover & {\r\n    opacity: 0;\r\n  }\r\n`\r\n\r\nconst Task = React.memo(\r\n  ({ content, id, columnID, userID, priority, index, dispatch }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [taskContent, setTaskContent] = useState(content);\r\n\r\n    const props = useSpring({\r\n      opacity: 1,\r\n      from: { opacity: 0 },\r\n      config: { duration: 400 },\r\n    });\r\n\r\n    const closeForm = (e) => {\r\n      setIsEditing(false);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n      setTaskContent(e.target.value);\r\n    };\r\n\r\n    const saveTask = (e) => {\r\n      e.preventDefault();\r\n      if (taskContent.trim().length !== 0) {\r\n        const task = {\r\n          id,\r\n          content: taskContent,\r\n          columnID,\r\n          userID,\r\n          priority,\r\n        };\r\n        dispatch(editTask(task));\r\n      }\r\n      setIsEditing(false);\r\n    };\r\n\r\n    const handleDeleteTask = () => {\r\n      dispatch(deleteTask({ id, columnID }));\r\n    };\r\n\r\n    const submitTaskDelete = () => {\r\n      confirmAlert({\r\n        title: \"Alert!\",\r\n        message: \"Are you sure you want to delete this task ?\",\r\n        buttons: [\r\n          {\r\n            label: \"Yes\",\r\n            onClick: () => handleDeleteTask(),\r\n          },\r\n          {\r\n            label: \"No\",\r\n            onClick: () => {\r\n              return null;\r\n            },\r\n          },\r\n        ],\r\n        closeOnEscape: true,\r\n        closeOnClickOutside: true,\r\n      });\r\n    };\r\n\r\n    const renderEditForm = () => {\r\n      return (\r\n        <Form\r\n          content={taskContent}\r\n          onChange={handleChange}\r\n          closeForm={closeForm}\r\n        >\r\n          <Button onClick={saveTask}>Save</Button>\r\n        </Form>\r\n      );\r\n    };\r\n\r\n    const renderTask = () => {\r\n      return (\r\n        <animated.div style={props}>\r\n          <Draggable draggableId={id} index={index}>\r\n            {(provided) => (\r\n              <TaskContainer\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                ref={provided.innerRef}\r\n                onDoubleClick={() => setIsEditing(true)}\r\n              >\r\n                <StyledTask>\r\n                  {priority === \"high\" ? <HighPriorityIcon\r\n                  fontSize=\"small\"/> : null}\r\n                  <EditButton\r\n                    fontSize=\"small\"\r\n                    onMouseDown={() => setIsEditing(true)}\r\n                  >\r\n                    edit\r\n                  </EditButton>\r\n                  <DeleteButton fontSize=\"small\" onMouseDown={submitTaskDelete}>\r\n                    delete\r\n                  </DeleteButton>\r\n                  <CardContent>\r\n                    <Typography>{content}</Typography>\r\n                  </CardContent>\r\n                </StyledTask>\r\n              </TaskContainer>\r\n            )}\r\n          </Draggable>\r\n        </animated.div>\r\n      );\r\n    };\r\n    return isEditing ? renderEditForm() : renderTask();\r\n  }\r\n);\r\n\r\nexport default connect()(Task);\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nexport function addTask(task) {\r\n  return (dispatch) => {\r\n    fetch('/tasks/add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(task)\r\n    })\r\n      .then(res => res.json())\r\n      .then(newTask => dispatch({\r\n        type: CONSTANTS.ADD_TASK,\r\n        payload: newTask\r\n      }));\r\n  }\r\n}\r\n\r\nexport function editTask(task) {\r\n  return (dispatch) => {\r\n    fetch('/tasks/' + task.id, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(task)\r\n    })\r\n      .then(res => res.json())\r\n      .then(editedTask => dispatch({\r\n        type: CONSTANTS.EDIT_TASK,\r\n        payload: editedTask\r\n      }));\r\n  }\r\n}\r\n\r\nexport function deleteTask(task) {\r\n  return (dispatch) => {\r\n    fetch('/tasks/delete/' + task.id, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(task)\r\n    })\r\n      .then(res => res.json())\r\n      .then(deletedTask => dispatch({\r\n        type: CONSTANTS.DELETE_TASK,\r\n        payload: deletedTask\r\n      }));\r\n  }\r\n}","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport styled from \"styled-components\";\r\n\r\nconst OpenFormButton = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\ncursor: pointer;\r\nborder-radius: 3px;\r\nheight: 36px;\r\nwidth: 290px;\r\npadding-left: 10px;\r\nopacity: 0.8;\r\ncolor: white;\r\nbackground-color: inherit;\r\n\r\n&:hover {\r\n  background-color: rgba(0,0,0,0.2);\r\n  border: 1px solid rgba(1, 11, 15);\r\n}\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-left: 5px;\r\n  margin-right: 8px;\r\n  padding-bottom: 2px;\r\n`;\r\n\r\nconst OpenForm = ({ children, onClick }) => {\r\n  return (\r\n    <OpenFormButton onClick={onClick}>\r\n      <StyledIcon>add</StyledIcon>\r\n      <p style={{ flexShrink: 0 }}>{children}</p>\r\n    </OpenFormButton>\r\n  );\r\n};\r\n\r\nexport default OpenForm;","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Button from \"./Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { addColumn, addTask } from \"../actions\";\r\nimport Form from \"./Form\";\r\nimport OpenForm from \"./OpenForm\";\r\n\r\nclass Create extends React.PureComponent {\r\n  state = {\r\n    formOpen: false,\r\n    content: \"\",\r\n    // columnLimitInput: \"\"\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({\r\n      formOpen: true\r\n    });\r\n  };\r\n\r\n  closeForm = e => {\r\n    this.setState({\r\n      formOpen: false\r\n    });\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      content: e.target.value\r\n    });\r\n  };\r\n\r\n  handleAddColumn = () => {\r\n    const { content } = this.state;\r\n\r\n    if (content) {\r\n      this.setState({\r\n        content: \"\",\r\n        // columnLimitInput: \"\"\r\n      });\r\n\r\n      if (content.trim().length !== 0) {\r\n        const newColumn = {\r\n          title: content,\r\n          // limit: Number(columnLimitInput.replace(/\\s/g, \"\"))\r\n        };\r\n  \r\n        this.props.addColumn(newColumn);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleAddTask = () => {\r\n    const { columnID } = this.props;\r\n    const { content } = this.state;\r\n\r\n      if (content) {\r\n        this.setState({\r\n          content: \"\"\r\n        });\r\n\r\n      if (content.trim().length !== 0) {\r\n        const newTask = {\r\n          content,\r\n          columnID\r\n        };\r\n  \r\n        this.props.addTask(newTask);\r\n      }\r\n    }\r\n  };\r\n\r\n  renderOpenForm = () => {\r\n    const { isColumn } = this.props;\r\n    const buttonText = isColumn ? \"Add a column\" : \"Add a task\";\r\n\r\n    return (\r\n      <OpenForm onClick={this.openForm}>\r\n        <Icon>add</Icon>\r\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\r\n      </OpenForm>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { content } = this.state;\r\n    const { isColumn } = this.props;\r\n\r\n    const placeholder = isColumn\r\n      ? \"Enter a column name...\"\r\n      : \"Enter a task description...\";\r\n\r\n    return this.state.formOpen ? (\r\n      <Form\r\n        content={content}\r\n        placeholder={placeholder}\r\n        onChange={this.handleInputChange}\r\n        closeForm={this.closeForm}\r\n      >\r\n        <Button onClick={isColumn ? this.handleAddColumn : this.handleAddTask}>\r\n          {isColumn ? \"Add a column\" : \"Add a task\"}\r\n        </Button>\r\n      </Form>\r\n    ) : (\r\n      <OpenForm onClick={this.openForm}>\r\n        {isColumn ? \"Add another column\" : \"Add another task\"}\r\n      </OpenForm>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addTask,\r\n  addColumn\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Create);\r\n","import React from 'react';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport styled from \"styled-components\";\r\n\r\nconst LimitError = styled(ErrorIcon)`\r\n  color: rgba(255,0,0,0.9);\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst TypographyStyled = styled(Typography)`\r\n    color: red;\r\n    text-shadow: none;\r\n\r\n    && {\r\n        font-weight: 100;\r\n    }\r\n`\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function MouseOverPopover() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handlePopoverOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <div>\r\n      <Typography\r\n        aria-owns={open ? 'mouse-over-popover' : undefined}\r\n        aria-haspopup=\"true\"\r\n        onMouseEnter={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n      >\r\n        <LimitError/>\r\n      </Typography>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{\r\n          paper: classes.paper,\r\n        }}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <TypographyStyled>Task limit exceeded!</TypographyStyled>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Task from \"./Task\";\r\nimport Create from \"./Create\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { editColumn, deleteColumn, dragStateSave } from \"../actions\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport AllInclusiveIcon from \"@material-ui/icons/AllInclusive\";\r\nimport LimitError from \"./LimitError\";\r\n\r\nconst ColumnContainer = styled.div`\r\n  color: white;\r\n  border: 1px solid rgba(1, 11, 15, 0.3);\r\n  -webkit-box-shadow: 1px 1px 3px 1px rgba(1, 11, 15, 0.3);\r\n  -moz-box-shadow: 1px 1px 3px 1px rgba(1, 11, 15, 0.3);\r\n  box-shadow: 1px 1px 3px 1px rgba(1, 11, 15, 0.3);\r\n  border-radius: 3px;\r\n  background-color: rgba(0,0,0,0.1);\r\n  width: 300px;\r\n  height: 100%;\r\n  margin-right: 12px;\r\n  padding: 8px;\r\n\r\n  &:active {\r\n    border: 1px solid rgba(0, 0, 0);\r\n    background-color: rgba(0,0,0,0.3)\r\n    }\r\n\r\n  &:hover {\r\n    border: 1px solid rgba(0, 0, 0);\r\n    background-color: rgba(0,0,0,0.2)\r\n    }\r\n\r\n  .\r\n`;\r\n\r\nconst StyledInputTitle = styled.input`\r\n  width: 80%;\r\n  background-color: inherit;\r\n  border: none;\r\n  outline: none;\r\n  border-bottom: 2px solid #03a8f45e;\r\n  margin-bottom: 5px;\r\n  margin-left: 23px;\r\n  font-size: 1.4rem;\r\n  text-align: center;\r\n  padding: 5px;\r\n  color: white;\r\n`;\r\n\r\nconst StyledInputLimit = styled.input`\r\n  width: 8%;\r\n  background-color: inherit;\r\n  border: none;\r\n  outline: none;\r\n  border-bottom: 2px solid #03a8f45e;\r\n  margin-bottom: 5px;\r\n  margin-left: 0px;\r\n  text-size: 1.4rem;\r\n  text-align: center;\r\n  padding: 5px;\r\n  color: white;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n  opacity: 0.5;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst ColumnTitle = styled.h3`\r\n  cursor: text;\r\n  text-transform: uppercase;\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst Limit = styled.h3`\r\n  margin-left: 10px;\r\n  min-width: 24px;\r\n  min-height: 28.8px;\r\n  margin-bottom: 5px;\r\n  margin-right: 10px;\r\n  cursor: text;\r\n  text-transform: uppercase;\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst ColumnList = ({ title, tasks, limit, id, index, dispatch, columns }) => {\r\n  const [isEditingTitle, setIsEditingTitle] = useState(false);\r\n  const [isEditingLimit, setIsEditingLimit] = useState(false);\r\n\r\n  const renderEditInput = (value) => {\r\n    return isEditingTitle ? (\r\n      <form onSubmit={handleFinishEditing}>\r\n        <StyledInputTitle\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          value={value}\r\n          autoFocus\r\n          onFocus={handleFocus}\r\n          onBlur={closeForm}\r\n        />\r\n      </form>\r\n    ) : (\r\n      <form onSubmit={handleFinishEditing}>\r\n        <StyledInputLimit\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          value={value}\r\n          autoFocus\r\n          onFocus={handleFocus}\r\n          onBlur={closeForm}\r\n        />\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const closeForm = () => {\r\n    setIsEditingTitle(false);\r\n    setIsEditingLimit(false);\r\n  };\r\n\r\n  const handleFocus = (e) => {\r\n    e.target.select();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (isEditingTitle) title = e.target.value;\r\n    if (isEditingLimit) limit = e.target.value;\r\n  };\r\n\r\n  const handleFinishEditing = () => {\r\n    let validatedColumnLimit = limit;\r\n\r\n    if (!/[0-9]/.test(validatedColumnLimit)) {\r\n      validatedColumnLimit = -99999;\r\n    }\r\n\r\n    setIsEditingTitle(false);\r\n    setIsEditingLimit(false);\r\n\r\n    if (title.trim().length !== 0) {\r\n      const column = {\r\n        id,\r\n        title: title,\r\n        limit: validatedColumnLimit,\r\n        tasks,\r\n        index,\r\n      };\r\n      dispatch(editColumn(column));\r\n    }\r\n  };\r\n\r\n  const handleDeleteColumn = () => {\r\n    dispatch(deleteColumn(id));\r\n    const filteredColumns = columns.filter((column) => column.id !== id);\r\n\r\n    dispatch(\r\n      dragStateSave(\r\n        filteredColumns.map((col, index) => {\r\n          col.index = index;\r\n          return col;\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  const submitColumnDelete = () => {\r\n    confirmAlert({\r\n      title: \"Alert!\",\r\n      message: \"Are you sure you want to delete this column ?\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => handleDeleteColumn(),\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => {\r\n            return null;\r\n          },\r\n        },\r\n      ],\r\n      closeOnEscape: true,\r\n      closeOnClickOutside: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Draggable key={id} draggableId={id} index={index}>\r\n      {(provided) => (\r\n        <ColumnContainer\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          {isEditingTitle || isEditingLimit ? (\r\n            renderEditInput()\r\n          ) : (\r\n            <TitleContainer>\r\n              <Limit onClick={() => setIsEditingLimit(true)}>\r\n                {limit <= -9999 ? (\r\n                  <AllInclusiveIcon />\r\n                ) : limit <= 0 ? (\r\n                  <LimitError/>\r\n                ) : (\r\n                  limit\r\n                )}\r\n              </Limit>\r\n              <ColumnTitle onClick={() => setIsEditingTitle(true)}>\r\n                {title}\r\n              </ColumnTitle>\r\n              <DeleteButton onClick={submitColumnDelete}>delete</DeleteButton>\r\n            </TitleContainer>\r\n          )}\r\n          <Droppable droppableId={id}>\r\n            {(provided) => (\r\n              <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                {tasks.map((task, index) => (\r\n                  <Task\r\n                    id={task.id}\r\n                    index={index}\r\n                    key={task.id}\r\n                    content={task.content}\r\n                    columnID={task.columnID}\r\n                    userID={task.userID}\r\n                    priority={task.priority}\r\n                  />\r\n                ))}\r\n                {provided.placeholder}\r\n                <Create columnID={id} />\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </ColumnContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  columns: state.columns,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ColumnList);\r\n","import React, { PureComponent } from \"react\";\r\nimport Column from \"./Column\";\r\nimport { connect } from \"react-redux\";\r\nimport Create from \"./Create\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { sort } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport { fetchColumns, dragStateSave } from '../actions/columnActions';\r\n\r\nconst ColumnsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nclass App extends PureComponent {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchColumns();\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId, type } = result;\r\n    const { columns } = this.props\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    this.props.sort(\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        draggableId,\r\n        type\r\n      )\r\n\r\n    this.props.dragStateSave(columns)\r\n  };\r\n\r\n  render() {\r\n    const { columns } = this.props;\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Droppable\r\n            droppableId=\"all-columns\"\r\n            direction=\"horizontal\"\r\n            type=\"column\"\r\n          >\r\n            {provided => (\r\n              <ColumnsContainer {...provided.droppableProps} ref={provided.innerRef}>\r\n                {columns.map((column) => (\r\n                  <Column\r\n                    id={column.id}\r\n                    key={column.id}\r\n                    title={column.title}\r\n                    tasks={column.tasks}\r\n                    index={column.index}\r\n                    limit={column.limit}\r\n                  />\r\n                ))}\r\n                {provided.placeholder}\r\n                <Create isColumn/>\r\n              </ColumnsContainer>\r\n            )}\r\n          </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  columns: state.columns\r\n});\r\n\r\nconst mapDispatchToProps = {fetchColumns, sort, dragStateSave}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/index'\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>,\r\ndocument.getElementById(\"root\")\r\n);"],"sourceRoot":""}